<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>howdy</title>
	<atom:link href="https://jameswsullivan.github.io/feed/" rel="self" type="application/rss+xml" />
	<link>https://jameswsullivan.github.io/</link>
	<description></description>
	<lastBuildDate>Mon, 02 Oct 2023 02:36:10 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.3.1</generator>
	<item>
		<title>Refurbish Mac Mini A1347 (Late 2014 ) â€“ Part 2 &#8211; Install Windows 11</title>
		<link>https://jameswsullivan.github.io/refurbish-mac-mini-a1347-late-2014-part-2-install-windows-11/</link>
		
		<dc:creator><![CDATA[James]]></dc:creator>
		<pubDate>Sun, 01 Oct 2023 21:04:59 +0000</pubDate>
				<category><![CDATA[blog]]></category>
		<category><![CDATA[brigadier]]></category>
		<category><![CDATA[Mac Mini]]></category>
		<category><![CDATA[Mac Mini A1347]]></category>
		<category><![CDATA[macOS]]></category>
		<category><![CDATA[System Administration]]></category>
		<category><![CDATA[Windows Systems Administration]]></category>
		<guid isPermaLink="false">https://jameswsullivan.github.io/?p=2797</guid>

					<description><![CDATA[Background: As detailed in the previous article, after the Mac Minis were restored (hardware wise), I decided to use one of them as a &#8220;media player&#8221; and mount it on the back of a monitor and place it in front of the treadmill to use while I work out. And since it&#8217;ll only be used [&#8230;]]]></description>
										<content:encoded><![CDATA[
<h2 class="wp-block-heading">Background:</h2>



<p>As detailed in <a href="https://jameswsullivan.github.io/refurbish-mac-mini-a1347-late-2014-part-1/">the previous article</a>, after the Mac Minis were restored (hardware wise), I decided to use one of them as a &#8220;media player&#8221; and mount it on the back of a monitor and place it in front of the treadmill to use while I work out. And since it&#8217;ll only be used as a media player, installing Windows 11 on it won&#8217;t be a bad idea.</p>



<p>I didn&#8217;t use BootCamp and didn&#8217;t have macOS and Windows dual OS, Windows 11 was installed natively. However, without going through the BootCamp process means that the Windows drivers issue won&#8217;t be automatically resolved.</p>



<h2 class="wp-block-heading">Solution:</h2>



<p>After installing Windows 11, use <a href="https://github.com/timsutton/brigadier">Brigadier</a> to download and install BootCamp and drivers, after the drivers are successfully installed, BootCamp and other Apple related software can be safely removed.</p>



<p>Currently there is <a href="https://github.com/timsutton/brigadier/issues/37">a 7zip issue</a> (<a href="https://sourceforge.net/p/sevenzip/bugs/2414/">7zip bug</a>) when unpacking the payload with brigadier. The easiest way to avoid this issue is to install the <code>7-Zip 22.01 (2022-07-15)</code> version.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Refurbish Mac Mini A1347 (Late 2014 ) &#8211; Part 1</title>
		<link>https://jameswsullivan.github.io/refurbish-mac-mini-a1347-late-2014-part-1/</link>
		
		<dc:creator><![CDATA[James]]></dc:creator>
		<pubDate>Sun, 01 Oct 2023 20:21:14 +0000</pubDate>
				<category><![CDATA[blog]]></category>
		<category><![CDATA[Mac Mini]]></category>
		<category><![CDATA[Mac Mini A1347]]></category>
		<category><![CDATA[macOS]]></category>
		<guid isPermaLink="false">https://jameswsullivan.github.io/?p=2784</guid>

					<description><![CDATA[Refurbish Mac Mini A1347 (late 2014, EMC 2840, 820-5509-A) - Part 1.]]></description>
										<content:encoded><![CDATA[
<h2 class="wp-block-heading">Background:</h2>



<p>I&#8217;ve acquired a few Mac Mini A1347 (late 2014, EMC 2840, 820-5509-A) over the years for my projects due to their decent performance, low price, and the possibility of RAM and SSD upgrades (RAM upgrade will require soldering/de-soldering of the memory chips and reconfiguration of some resistors, which I&#8217;ll attempt at a later time). This first part of the series details the process of how I resolved the overheating issue and some OS installation hiccups.</p>



<p>Machines and their specs:</p>



<ul>
<li>2 x i5, 4GB RAM models, with no HDD/SSD and accessories.</li>



<li>1 x i5, 8GB RAM model, with original 1TB HDD.</li>
</ul>



<h2 class="wp-block-heading">Problems:</h2>



<ol>
<li>One 4GB model repeatedly gets the 5101F error when attempting to reinstall macOS via Internet Recovery. Also, for some reason this particular machine would not enter its built-in Recovery Mode regardless which key combinations were used (<code>Command/Windows Key + R</code> should enter built-in Recovery Mode, <code>Command/Windows Key + Option/Alt + R</code> enters Internet Recovery), it would always automatically enter Internet Recovery and eventually fails with the 5101F error.</li>



<li>The 8GB RAM model produces excessive heat compared to the rest of Mac Minis and received the &#8220;An error occurred while preparing the installation. try running this application again.&#8221; error while reinstalling macOS Sierra via built-in Recovery Mode.</li>
</ol>



<h2 class="wp-block-heading">Solution:</h2>



<p><strong>1. The 5101F and unable to enter built-in Recovery Mode problem:</strong></p>



<p>This error could have multiple causes (such as poor internet connection). In my case, resetting the PRAM/NVRAM resolved it. To reset the PRAM/NVRAM, follow these steps:</p>



<ul>
<li>Power off the Mac Mini.</li>



<li>Power on the machine, press and hold <code>Option + Command + P + R (Windows Key + Alt + P + R)</code> when you hear the power-on chime. The machine will restart a few times, keep holding the keys until you hear the third chime (counting from the one when you first powered the machine on).</li>



<li>Release the keys, your machine will reboot one more time and then boot normally.</li>
</ul>



<p>Note: you can also hold the keys for 20+ seconds. The number of chimes you hear is not a factor as to whether the reset is successful.</p>



<p>After the NVRAM reset, shut down the machine, unplug the power cord, push and hold the power button for a few seconds and then power on the machine and use <code>Command/Windows Key + R</code> to enter built-in Recovery Mode.</p>



<p>Upon successful boot up, I discovered that the OS Recovery was still at Yosemite (the other 4GB model was at Sierra). Without knowing the history of the machine, maybe being outdated had something to do with the errors.</p>



<p>After reinstalling macOS Yosemite, macOS Sierra can be downloaded <a href="https://support.apple.com/en-us/HT211683#browser">here</a> and manually installed without further issues (Internet Recovery still produces 5101F error).</p>



<p><strong>2. &#8220;An error occurred while preparing the installation. try running this application again.&#8221; while reinstalling macOS Sierra via built-in Recovery Mode.</strong></p>



<p>For this one, resetting the NVRAM had no effect, but going straight to Internet Recovery was able to install macOS Monterey successfully. It seems that the built-in OS Recovery for Sierra was broken in <a href="https://www.reddit.com/r/MacOS/comments/1030a4g/need_help_with_this_an_error_occurred_while/">some cases</a>.</p>



<p><strong>3. The excessive heat.</strong></p>



<p>Assuming that the cooling fan and logic boards are all clean and intact and there is no excessive dust that blocks the cooling channels, reapplying the thermal paste on the CPU is usually the solution. I assume that if you&#8217;re already doing this level of repair, you would already be familiar with how to disassemble the Mac Mini and the heatsink, so I&#8217;ll only post a few pictures here for reference.</p>



<figure class="wp-block-gallery has-nested-images columns-default is-cropped wp-block-gallery-1 is-layout-flex wp-block-gallery-is-layout-flex">
<figure class="wp-block-image size-large"><a href="https://jameswsullivan.github.io/wp-content/uploads/2023/10/macmini-thermal-paste-01-scaled.jpg"><img decoding="async" fetchpriority="high" width="1024" height="576" data-id="2788" src="https://jameswsullivan.github.io/wp-content/uploads/2023/10/macmini-thermal-paste-01-1024x576.jpg" alt="" class="wp-image-2788" srcset="https://jameswsullivan.github.io/wp-content/uploads/2023/10/macmini-thermal-paste-01-1024x576.jpg 1024w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/macmini-thermal-paste-01-300x169.jpg 300w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/macmini-thermal-paste-01-768x432.jpg 768w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/macmini-thermal-paste-01-1536x864.jpg 1536w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/macmini-thermal-paste-01-2048x1152.jpg 2048w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/macmini-thermal-paste-01-700x394.jpg 700w" sizes="(max-width: 1024px) 100vw, 1024px" /></a></figure>



<figure class="wp-block-image size-large"><a href="https://jameswsullivan.github.io/wp-content/uploads/2023/10/macmini-thermal-paste-02-scaled.jpg"><img decoding="async" width="1024" height="576" data-id="2789" src="https://jameswsullivan.github.io/wp-content/uploads/2023/10/macmini-thermal-paste-02-1024x576.jpg" alt="" class="wp-image-2789" srcset="https://jameswsullivan.github.io/wp-content/uploads/2023/10/macmini-thermal-paste-02-1024x576.jpg 1024w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/macmini-thermal-paste-02-300x169.jpg 300w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/macmini-thermal-paste-02-768x432.jpg 768w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/macmini-thermal-paste-02-1536x864.jpg 1536w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/macmini-thermal-paste-02-2048x1152.jpg 2048w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/macmini-thermal-paste-02-700x394.jpg 700w" sizes="(max-width: 1024px) 100vw, 1024px" /></a></figure>



<figure class="wp-block-image size-large"><a href="https://jameswsullivan.github.io/wp-content/uploads/2023/10/macmini-thermal-paste-03-scaled.jpg"><img decoding="async" width="1024" height="575" data-id="2790" src="https://jameswsullivan.github.io/wp-content/uploads/2023/10/macmini-thermal-paste-03-1024x575.jpg" alt="" class="wp-image-2790" srcset="https://jameswsullivan.github.io/wp-content/uploads/2023/10/macmini-thermal-paste-03-1024x575.jpg 1024w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/macmini-thermal-paste-03-300x169.jpg 300w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/macmini-thermal-paste-03-768x432.jpg 768w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/macmini-thermal-paste-03-1536x863.jpg 1536w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/macmini-thermal-paste-03-2048x1151.jpg 2048w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/macmini-thermal-paste-03-700x393.jpg 700w" sizes="(max-width: 1024px) 100vw, 1024px" /></a></figure>
</figure>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Migrate Windows 10 from SATA to USB</title>
		<link>https://jameswsullivan.github.io/migrate-windows-10-from-sata-to-usb/</link>
		
		<dc:creator><![CDATA[James]]></dc:creator>
		<pubDate>Wed, 16 Aug 2023 03:46:27 +0000</pubDate>
				<category><![CDATA[blog]]></category>
		<category><![CDATA[Hardware]]></category>
		<category><![CDATA[System Administration]]></category>
		<category><![CDATA[Windows Customization]]></category>
		<category><![CDATA[Windows Systems Administration]]></category>
		<guid isPermaLink="false">https://jameswsullivan.github.io/?p=2766</guid>

					<description><![CDATA[Use Hasleo WinToUSB to migrate Windows 10 from a SATA installation onto a USB connected drive.]]></description>
										<content:encoded><![CDATA[
<h2 class="wp-block-heading">Background:</h2>



<p>I have an older Lenovo M93p Tiny computer that I use for some file sharing work, it&#8217;s been running fine until I recently noticed some degradation of file transfer speed between this machine and my file server. It turned out that the PoE switch was the main culprit, probably due to exhausted RAM/buffer or high CPU usage, and a reboot resolved the network performance issue. However, the file transfer speed was still not ideal &#8211; under perfect condition, file transfer between two computers should hover around 100 &#8211; 113 MB/s, but I was only getting around 40 MB/s max.</p>



<p>For better illustration, here are how the two drives are connected:</p>



<ul>
<li>a 120GB SSD is directly installed inside the unit, connected via the SATA (SATA 2, 3.0Gb/s) port. </li>



<li>a 1TB old Apple HDD connected using the <a href="https://www.google.com/search?sca_esv=557322196&amp;rlz=1C1GCEA_enUS1010US1010&amp;q=12.7mm+DVD-ROM+Hard+Drive+Caddy&amp;tbm=shop&amp;source=lnms&amp;sa=X&amp;ved=2ahUKEwiAibG6mOCAAxVFlGoFHZUkDpcQ0pQJegQICxAB&amp;biw=1285&amp;bih=648&amp;dpr=1.88" data-type="link" data-id="https://www.google.com/search?sca_esv=557322196&amp;rlz=1C1GCEA_enUS1010US1010&amp;q=12.7mm+DVD-ROM+Hard+Drive+Caddy&amp;tbm=shop&amp;source=lnms&amp;sa=X&amp;ved=2ahUKEwiAibG6mOCAAxVFlGoFHZUkDpcQ0pQJegQICxAB&amp;biw=1285&amp;bih=648&amp;dpr=1.88" target="_blank" rel="noreferrer noopener">12.7mm DVD-ROM Hard Drive Caddy</a>, and connected to the computer via USB (with Lenovo&#8217;s optical drive VESA expansion bracket).</li>
</ul>



<p>After some experimentation, it appears that the drive caddy might be the bottleneck, so I decided to switch the two drives.</p>



<p>However, since the OS was initially installed onto the SATA drive, switching to USB will cause boot issues and also due to driver mismatch, a simple BCD rebuild won&#8217;t work. But I managed to make it work with <a href="https://www.easyuefi.com/" target="_blank" rel="noreferrer noopener">Hasleo WinToUSB</a>, <strong>here are the steps</strong>:</p>



<ol>
<li>Clone the 120GB drive to another temporary drive, install (use the SATA port) and boot into Windows using the temporary drive (rebuild BCD if needed).</li>



<li>Connect the 120GB drive to the optical drive caddy (USB).</li>



<li>Use Hasleo WinToUSB&#8217;s <code>Windows To Go USB</code> function to clone your <code>Current Windows OS</code> to the 120GB drive that&#8217;s connected via USB.</li>



<li>Remove the temporary drive, connect the 1TB HDD via SATA, boot into BIOS and change boot device to the USB device accordingly (mine shows as USB FDD).</li>
</ol>



<p>A second reboot might be needed for the machine to pickup the USB bootable device.</p>



<h2 class="wp-block-heading">How to rebuild BCD (Windows 10 UEFI):</h2>



<ul>
<li>Use a WinPE or Windows installation USB to boot into a command prompt (or if you are able to enter command prompt using F8 or Advanced Boot Options).</li>



<li>Use diskpart to assign a letter to the EFI partition:</li>
</ul>



<pre class="wp-block-code"><code>diskpart
list disk
sel disk X

# X is your disk number

list vol

# find the volume that's FAT32 (the EFI partition).

sel vol X
assign letter=Z

exit</code></pre>



<ul>
<li>Now switch to the Z drive, and run the following commands:</li>
</ul>



<pre class="wp-block-code"><code>cd EFI\Microsoft\Boot
del BCD
# or: ren BCD BCD.bk if you want to be safe.

bootrec /rebuildbcd

# if bootrec doesn't work, try
bcdboot X:\windows /s Z: /f UEFI
# where X is your windows installation's location.</code></pre>



<h2 class="wp-block-heading">Afterthought:</h2>



<p>There might be a way to inject/change the correct drivers (from SATA to USB) so that Windows can boot correctly, but I wasn&#8217;t successful with it.</p>



<p>The reason a Windows To Go clone was needed is that after switching the drive directly from SATA to USB and try to boot, the drive would still be recognized as a SATA drive in BIOS, and attempting a normal boot (with or without BCD rebuild) would result in a blue screen with INACCESSIBLE_BOOT_DEVICE error. However, Windows was able to boot into Safe Mode, which indicates the driver mismatch being the culprit.</p>



<p>Using Hasleo WinToUSB was a quicker solution, I might decided to experiment with the driver sometime in the future with a spare machine.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Flash LSI SAS Adapters to HBA IT MODE</title>
		<link>https://jameswsullivan.github.io/flash-lsi-sas-adapters-to-hba-it-mode/</link>
		
		<dc:creator><![CDATA[James]]></dc:creator>
		<pubDate>Sat, 05 Aug 2023 23:33:28 +0000</pubDate>
				<category><![CDATA[blog]]></category>
		<category><![CDATA[Firmware]]></category>
		<category><![CDATA[HBA]]></category>
		<category><![CDATA[LSI HBA Adapters]]></category>
		<category><![CDATA[MegaCLI]]></category>
		<category><![CDATA[MegaRec]]></category>
		<category><![CDATA[NAS]]></category>
		<category><![CDATA[SAS2FLASH.EFI]]></category>
		<category><![CDATA[SAS2FLSH]]></category>
		<category><![CDATA[Storage]]></category>
		<category><![CDATA[TrueNAS]]></category>
		<guid isPermaLink="false">https://jameswsullivan.github.io/?p=2205</guid>

					<description><![CDATA[Flash LSI SAS Adapters to IT MODE with MegaRec, SAS2FLASH.EFI.]]></description>
										<content:encoded><![CDATA[
<p>In the past year of so I&#8217;ve acquired a few SAS Adapters for my NAS and other server builds and needed to flash them to IT mode to use with TrueNAS and Windows storage pool. The following steps were performed on a PIKE 2008 card that came with an ASUS Z9PA-D8 motherboard.</p>



<p>I did quite some research on this matter and found that a lot of the tutorials have over complicated the issue if the only goal here is to flash the SAS adapter to IT mode, so here I&#8217;ll provide a simplified process.</p>



<h2 class="wp-block-heading">Tools needed:</h2>



<ul>
<li>The firmware <code>.bin</code> file of your adapter. Most of the firmware files can be downloaded directly from Broadcom&#8217;s website. (Here we&#8217;re using the <code>2118it.bin</code> file extracted from the <code>9211-8i_Package_P20_IR_IT_FW_BIOS_for_MSDOS_Windows</code> package.</li>



<li>You <strong>do not</strong> necessarily need the full suite of the LSI command line toolkit, you only need three files: <code>MegaRec.exe</code>, <code>DOS4GW.EXE</code>, and <code>sas2flash.efi</code> . <code>MegaCli</code> is optional, I used it on one machine and it provides a lot of powerful functions but on the machine with PIKE 2008, it wasn&#8217;t able to detect any hardware.</li>



<li>The <code>sbrempty.bin</code> file.</li>



<li>A flash drive (a small one is enough, the files needed are only a few MBs) formatted to FAT32.</li>



<li>A copy of the EFI bootloader (<code>efi\boot\bootx64.efi</code>) to boot into the EFI shell.</li>



<li><a rel="noreferrer noopener" href="https://rufus.ie/en/" target="_blank">Rufus</a>, to make the flash drive DOS bootable.</li>



<li>Optional: If you want to be able to boot into the card&#8217;s BIOS utility, you can flash the <code>mptsas2.rom</code> as well (not provided), but if you only want your adapter to function like extra SATA ports in passthrough mode, you can ignore this one.</li>
</ul>



<p>Note: You can probably perform the firmware flash without the EFI shell, the sas2flash tool has a DOS version, but from my experience the EFI version has the best compatibility and I&#8217;ve had the most success with it. All the files needed can be downloaded here: <a rel="noreferrer noopener" href="https://github.com/jameswsullivan/blog-file-share/blob/main/SAS-Adapters-IT-Mode.zip" target="_blank">SAS-Adapters-IT-Mode.zip</a> .</p>



<h2 class="wp-block-heading">Steps:</h2>



<p>1. Use Rufus to make a MS-DOS bootable flash drive. Add all files from the zip file to the root directory of the flash drive. The root directory should look like this:</p>



<pre class="wp-block-code"><code>LOCALE
efi
autorun.inf
autorun.ico
MegaRec.exe
DOS4GW.EXE
2118it.bin
sbrempty.bin
sas2flash.efi</code></pre>



<p>2. Configure your boot options in BIOS as needed (legacy and UEFI), and boot into EFI first.</p>



<p>3. At the EFI shell prompt, move to the flash drive (mine is <code>fs0:</code> ), and execute the following commands:</p>



<pre class="wp-block-code"><code># List your boards. If you only have one adapter, the index should be 0.
sas2flash.efi -listall

# Get the adapter's SAS address.
sas2flash.efi -c 0 -list

# You can pipe your output to a text file if you want to keep a record of it, and you can use the "edit" command in the EFI shell to view/edit the files, very much like how you use "nano" on Linux. e.g.:

sas2flash.efi -listall > myadapters.txt
sas2flash.efi -c 0 -list > adapter0info.txt
edit adapter0info.txt</code></pre>



<p>4. Exit out of the EFI shell and boot into DOS. At the DOS prompt, move to your flash drive and execute the following <code>MegaRec</code> commands:</p>



<pre class="wp-block-code"><code># Show adapters, which we already know from step 3 that our adapter is at "0".
megarec -adplist

# &#91;Optional]: Make a backup of your SBR and SPD.
megarec -readsbr 0 file_name.sbr
megarec -readspd 0 file_name.spd

# Write the sbrempty.bin file.
megarec -writesbr 0 sbrempty.bin

# Clean the flash. This step might take a few minutes.
megarec -cleanflash 0

# Note: You can also pipe the output of these commands to a text file for documentation.</code></pre>



<p>5. Boot into the EFI shell again and flash the <code>2118it.bin</code> firmware.</p>



<pre class="wp-block-code"><code># Flash the 2118it.bin firmware:
sas2flash.efi -c 0 -o -f 2118it.bin
OR
sas2flash.efi -c 0 -o -f 2118it.bin -b mptsas2.rom

# Grab the SAS address from step 3 and set the address.
# Note, the SAS address displayed in step 3 contains dashes, but when you enter it here you need to enter the 16 digits address without dashes.
sas2flash.efi -c 0 -o -sasadd 12345600000000AB

# Verify your adapter
sas2flash.efi -listall
sas2flash.efi -c 0 -list</code></pre>



<p>If all the steps finished without errors, your SAS adapter should be working in IT Mode now. As a reference, I have the following cards on my servers: one PIKE 2008, one 9200-8i (or maybe a 9220-8i), and two IBM ServeRAID M1015 that came off some x3690 X5 servers.</p>



<div style="height:50px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">Reference: MegaREC Command Usage:</h2>



<pre class="wp-block-code"><code>
MegaRAID HWR Contoller Recovery tool. Version 01.02-007 August 03, 2011
Copyright (c) 2006-2010 LSI Corp.
Supports 1078 controller and its Successors.

Usage:
MegaRec -help                  : Display the list of options
MegaRec -adpList               : Display identified MR controller(s)
MegaRec -corruptInfo           : Display corruption information of controller
MegaRec -m0flash &lt;n&gt; &lt;image&gt;   : Flash controller
                               : where &lt;n&gt; is the controller index
                               : and &lt;image&gt; is the image file to flash
MegaRec -cleanflash &lt;n&gt; &lt;image&gt;: Erase Flash. Programs if image is Provided.
                               : where &lt;n&gt; is the controller index
                               : and &lt;image&gt; is the image file to flash
MegaRec -readspd &lt;n&gt; &lt;image&gt;   : Read controller SPD to specified file
                               : where &lt;n&gt; is the controller index
                               : and &lt;image&gt; is the specified file name
MegaRec -writespd &lt;n&gt; &lt;image&gt;  : Write controller SPD from specified file
                               : where &lt;n&gt; is the controller index
                               : and &lt;image&gt; is the specified file name
MegaRec -readsbr &lt;n&gt; &lt;image&gt; &#91;&lt;byteCount&gt;] : Read controller SBR to specified 
                               : file where &lt;n&gt; is the controller index,
                               : &lt;byteCount&gt; is the number of bytes of SBR 
                               : to be read and is optional to specify
                               : and &lt;image&gt; is the specified file name
MegaRec -writesbr &lt;n&gt; &lt;image&gt;  : Write controller SBR from specified file
                               : where &lt;n&gt; is the controller index
                               : and &lt;image&gt; is the specified file name
MegaRec -m0flash &lt;n&gt; &lt;image&gt; &lt;-i2o/-fusion&gt;     : Flash controller in I2O/FUSION mode
MegaRec -cleanflash &lt;n&gt; &lt;image&gt; &lt;-i2o/-fusion&gt;  : Erase Flash. Programs if image is Provided in I2O/FUSION mode.
MegaRec -readspd &lt;n&gt; &lt;image&gt; &lt;-i2o/-fusion&gt;     : Read controller SPD to specified file in I2O/FUSION mode
MegaRec -writespd &lt;n&gt; &lt;image&gt; &lt;-i2o/-fusion&gt;    : Write controller SPD from specified file in I2O/FUSION mode
MegaRec -readsbr &lt;n&gt; &lt;image&gt; &#91;&lt;byteCount&gt;] &lt;-i2o/-fusion&gt; : Read controller SBR to specified file in I2O/FUSION mode
MegaRec -writesbr &lt;n&gt; &lt;image&gt; &lt;-i2o/-fusion&gt;    : Write controller SBR from specified file in I2O/FUSION mode
</code></pre>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Expand LVM in Ubuntu (22.04 LTS)</title>
		<link>https://jameswsullivan.github.io/expand-lvm-in-ubuntu-22-04-lts/</link>
		
		<dc:creator><![CDATA[James]]></dc:creator>
		<pubDate>Sat, 05 Aug 2023 16:06:41 +0000</pubDate>
				<category><![CDATA[blog]]></category>
		<category><![CDATA[Docker]]></category>
		<category><![CDATA[Linux]]></category>
		<category><![CDATA[System Administration]]></category>
		<category><![CDATA[Ubuntu]]></category>
		<guid isPermaLink="false">https://jameswsullivan.github.io/?p=2710</guid>

					<description><![CDATA[Expand LVM in Ubuntu 22.04 LTS.]]></description>
										<content:encoded><![CDATA[
<p>This Ubuntu server (Hyper-V VM) in question is a Docker host that was partitioned using the default layout (50/50 split of available disk space) when Ubuntu was installed. After a few month one of the logic volumes <code>/dev/mapper/ubuntu--vg-ubuntu--lv</code> ran out of space. Since there is no GUI for partition management, a few steps will be needed to properly expand the volume size.</p>



<h2 class="wp-block-heading">Solution:</h2>



<p>1. Expand the virtual disk size in Hyper-V manager.</p>



<p>2. On the Ubuntu server, use <code>fdisk -l</code> to identify the disk and df -h to check the disk usage, here we use <code>/dev/sdf</code> (disk) and <code>/dev/mapper/ubuntu--vg-ubuntu--lv</code> (logic volume) as an example.</p>



<p>3. Run <code>parted /dev/sdf print</code> to view partition layout. You&#8217;ll probably get a warning message like this. Which one you choose doesn&#8217;t really matter because we&#8217;re doing the process manually.</p>



<pre class="wp-block-code"><code>Warning: Not all of the space available to /dev/sdf appears to be used, you can fix the GPT to use all of the space (an extra ______ blocks) or continue with the current setting?
Fix/Ignore?</code></pre>



<p>4. After you see the list of partitions, run this command on the partition that you need to expand to resize the partition to use the additional space, here we use partition 3 as an example: <code>parted /dev/sdf resizepart 3 100%</code></p>



<p>5. Resize the Physical Volume using command: <code>pvresize /dev/sdf3</code></p>



<p>6. Now that if you run <code>vgdisplay</code> , you should see the free space listed under <code>Free PE / Size</code>. And make sure you have your volume group name <code>ubuntu-vg</code> ready.</p>



<p>7. Run <code>lvdisplay</code> to identify the logical volume we need to expand, as we discussed above, the one needs expanding is the <code>/dev/ubuntu-vg/ubuntu-lv</code> volume.</p>



<p>8. Run <code>lvextend -l +100%FREE -r /dev/ubuntu-vg/ubuntu-lv</code> to expand the volume.</p>



<p>9. Now run <code>vgdisplay</code> , <code>lvdisplay</code>, and <code>df -h</code> again to verify that the <code>/dev/mapper/ubuntu--vg-ubuntu--lv</code> volume has been successfully expanded. Reboot the system if needed.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Repair ProForm 505 CST Treadmill</title>
		<link>https://jameswsullivan.github.io/repair-proform-505-cst-treadmill/</link>
		
		<dc:creator><![CDATA[James]]></dc:creator>
		<pubDate>Sun, 16 Jul 2023 21:08:14 +0000</pubDate>
				<category><![CDATA[blog]]></category>
		<category><![CDATA[Electronics]]></category>
		<category><![CDATA[MOSFET]]></category>
		<guid isPermaLink="false">https://jameswsullivan.github.io/?p=2637</guid>

					<description><![CDATA[Repair ProForm 505 CST Treadmill.]]></description>
										<content:encoded><![CDATA[
<p>I recently picked up a used, broken ProForm 505 CST Treadmill from someone at a really cheap price and decided to experiment with a repair myself, because the symptoms didn&#8217;t sound like it&#8217;s irreparable.</p>



<p><strong>And I was right</strong> &#8211; the only thing I needed to replace was an IRFP250 MOSFET.</p>



<blockquote class="wp-block-quote">
<p><strong>Symptom:</strong> The control panel turns on fine, but the motor will run for a fraction of a second and then immediately stop.</p>
</blockquote>



<p>The repair is very easy: de-solder the bad MOSFET and replace it with a new one.</p>



<p>The bad MOSFET was shot, you can diagnose with a multimeter:</p>



<ul>
<li>Put the multimeter in continuity or diode testing mode, you should see a voltage drop between the pins on a good MOSFET and the pins shouldn&#8217;t be directly connected to each other.</li>



<li>On the bad one, all three pins were directly connected and the multimeter beeps in continuity mode (meaning the MOSFET is shot).</li>
</ul>



<figure class="wp-block-image size-large is-resized"><a href="https://jameswsullivan.github.io/wp-content/uploads/2023/07/repair-treadmill-01-scaled.jpg"><img decoding="async" loading="lazy" src="https://jameswsullivan.github.io/wp-content/uploads/2023/07/repair-treadmill-01-1024x576.jpg" alt="Motor Control Board" class="wp-image-2639" width="768" height="432" srcset="https://jameswsullivan.github.io/wp-content/uploads/2023/07/repair-treadmill-01-1024x576.jpg 1024w, https://jameswsullivan.github.io/wp-content/uploads/2023/07/repair-treadmill-01-300x169.jpg 300w, https://jameswsullivan.github.io/wp-content/uploads/2023/07/repair-treadmill-01-768x432.jpg 768w, https://jameswsullivan.github.io/wp-content/uploads/2023/07/repair-treadmill-01-1536x864.jpg 1536w, https://jameswsullivan.github.io/wp-content/uploads/2023/07/repair-treadmill-01-2048x1152.jpg 2048w, https://jameswsullivan.github.io/wp-content/uploads/2023/07/repair-treadmill-01-700x394.jpg 700w" sizes="(max-width: 768px) 100vw, 768px" /></a></figure>



<figure class="wp-block-image size-large is-resized"><a href="https://jameswsullivan.github.io/wp-content/uploads/2023/07/repair-treadmill-02-scaled.jpg"><img decoding="async" loading="lazy" src="https://jameswsullivan.github.io/wp-content/uploads/2023/07/repair-treadmill-02-1024x576.jpg" alt="IRFP250 MOSFET" class="wp-image-2641" width="768" height="432" srcset="https://jameswsullivan.github.io/wp-content/uploads/2023/07/repair-treadmill-02-1024x576.jpg 1024w, https://jameswsullivan.github.io/wp-content/uploads/2023/07/repair-treadmill-02-300x169.jpg 300w, https://jameswsullivan.github.io/wp-content/uploads/2023/07/repair-treadmill-02-768x432.jpg 768w, https://jameswsullivan.github.io/wp-content/uploads/2023/07/repair-treadmill-02-1536x864.jpg 1536w, https://jameswsullivan.github.io/wp-content/uploads/2023/07/repair-treadmill-02-2048x1152.jpg 2048w, https://jameswsullivan.github.io/wp-content/uploads/2023/07/repair-treadmill-02-700x394.jpg 700w" sizes="(max-width: 768px) 100vw, 768px" /></a></figure>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Configure VLAN and InterVLAN Routing on Cisco Router and Switch</title>
		<link>https://jameswsullivan.github.io/configure-vlan-and-intervlan-routing-on-cisco-router-and-switch/</link>
		
		<dc:creator><![CDATA[James]]></dc:creator>
		<pubDate>Tue, 20 Jun 2023 15:25:19 +0000</pubDate>
				<category><![CDATA[blog]]></category>
		<category><![CDATA[Cisco]]></category>
		<category><![CDATA[Cisco 2951]]></category>
		<category><![CDATA[Cisco C3750G]]></category>
		<category><![CDATA[InterVLAN Routing]]></category>
		<category><![CDATA[Network Administration]]></category>
		<category><![CDATA[Networking]]></category>
		<category><![CDATA[router-on-a-stick]]></category>
		<guid isPermaLink="false">https://jameswsullivan.github.io/?p=2574</guid>

					<description><![CDATA[Configure VLAN and InterVLAN routing on Cisco router and switch using router-on-a-stick and SVI.]]></description>
										<content:encoded><![CDATA[
<h2 class="wp-block-heading">Environment &amp; Requirement</h2>



<ul>
<li>Router: Cisco 2951</li>



<li>Switch: Cisco C3750G PoE</li>



<li>2 VLANs</li>
</ul>



<h2 class="wp-block-heading">Method 1: router-on-a-stick</h2>



<pre class="wp-block-code"><code>Topology: C3750G (GigabitEthernet3/0/1) -- CISCO2951(GigabitEthernet0/1) -- INTERNET(GigabitEthernet0/0)</code></pre>



<h4 class="wp-block-heading">On CISCO2951:</h4>



<pre class="wp-block-code"><code>CISCO2951(config)#interface GigabitEthernet 0/0
CISCO2951(config-if)#no shutdown
CISCO2951(config-if)#speed 1000
CISCO2951(config-if)#duplex full
CISCO2951(config-if)#exit

CISCO2951(config)#interface GigabitEthernet 0/0.10
CISCO2951(config-subif)#encapsulation dot1Q 10
CISCO2951(config-subif)#ip address 192.168.10.1 255.255.255.0
CISCO2951(config-subif)#exit

CISCO2951(config)#interface GigabitEthernet 0/0.20
CISCO2951(config-subif)#encapsulation dot1Q 20                 
CISCO2951(config-subif)#ip address 192.168.20.1 255.255.255.0</code></pre>



<h4 class="wp-block-heading">On C3750G:</h4>



<pre class="wp-block-code"><code>C3750G(config)#interface GigabitEthernet 3/0/1
C3750G(config-if)#switchport mode trunk
C3750G(config-if)#switchport trunk encapsulation dot1q
C3750G(config-if)#no shutdown
C3750G(config-if)#speed 1000
C3750G(config-if)#duplex full
C3750G(config-if)#exit

C3750G(config)#vlan 10
C3750G(config-vlan)#name VLAN10
C3750G(config-vlan)#exit
C3750G(config)#vlan 20
C3750G(config-vlan)#name VLAN20
C3750G(config-vlan)#exit

# Assign ports to the VLANs as needed:
C3750G(config)#interface GigabitEthernet 3/0/2
C3750G(config-if)#switchport mode access
C3750G(config-if)#switchport access vlan 10
C3750G(config-if)#no shutdown
C3750G(config-if)#speed 1000
C3750G(config-if)#duplex full
C3750G(config-if)#exit

C3750G(config)#interface GigabitEthernet 3/0/3
C3750G(config-if)#switchport mode access
C3750G(config-if)#switchport access vlan 20
C3750G(config-if)#no shutdown
C3750G(config-if)#speed 1000
C3750G(config-if)#duplex full
C3750G(config-if)#exit</code></pre>



<h2 class="wp-block-heading">Method 2: SVI (Switch Virtual Interface) and InterVLAN routing on C3750G switch.</h2>



<pre class="wp-block-code"><code>Topology: C3750G (GigabitEthernet3/0/1) -- CISCO2951(GigabitEthernet0/1) -- INTERNET(GigabitEthernet0/0)</code></pre>



<h4 class="wp-block-heading">CISCO2951 Configs:</h4>



<pre class="wp-block-code"><code># Configure GigabitEthernet 0/0 (connected to cable modem from ISP) to use DHCP.
CISCO2951(config)#interface GigabitEthernet 0/0
CISCO2951(config-if)#ip address dhcp
CISCO2951(config-if)#ip nat outside
CISCO2951(config-if)#ip virtual-reassembly in
CISCO2951(config-if)#no shutdown
CISCO2951(config-if)#speed 1000
CISCO2951(config-if)#duplex full
CISCO2951(config-if)#exit

# Configure GigabitEthernet0/1 (connected to C3750G).
CISCO2951(config)#interface GigabitEthernet 0/1
CISCO2951(config-if)#ip address 192.168.0.1 255.255.255.0
CISCO2951(config-if)#ip access-group NAT_ACL in
CISCO2951(config-if)#ip nat inside
CISCO2951(config-if)#ip virtual-reassembly in
CISCO2951(config-if)#no shutdown
CISCO2951(config-if)#speed 1000
CISCO2951(config-if)#duplex full
CISCO2951(config-if)#exit

# Configure ACL and NAT.
CISCO2951(config)#ip dns server
CISCO2951(config)#ip access-list extended NAT_ACL
CISCO2951-K9(config-ext-nacl)#permit ip 192.168.0.0 0.255.255.255 any
CISCO2951-K9(config-ext-nacl)#exit
CISCO2951(config)#ip nat inside source list NAT_ACL interface GigabitEthernet0/0 overload

# Enable routing and configure EIGRP (optional, depending on your configs)
CISCO2951(config)#ip routing
CISCO2951(config)#router eigrp 100
CISCO2951(config-router)#network 192.168.0.0 0.255.255.255</code></pre>



<h4 class="wp-block-heading">C3750G Configs:</h4>



<pre class="wp-block-code"><code># Enable routing.
C3750G(config)#ip routing
# Disable "ip cef optimize neighbor resolution" to get rid of excessive warning/error logs.
C3750G(config)#no ip cef optimize neighbor resolution
C3750G(config)#no ip domain-lookup

# Enable spanning-tree protocol.
C3750G(config)#spanning-tree mode pvst

# Configure VLANs
C3750G(config)#vlan 10
C3750G(config-vlan)#name VLAN10
C3750G(config-vlan)#exit
C3750G(config)#vlan 20
C3750G(config-vlan)#name VLAN20
C3750G(config-vlan)#exit

C3750G(config)#interface vlan 10
C3750G(config-if)#ip address 192.168.10.1 255.255.255.0
C3750G(config-if)#ip helper-address 192.168.0.1
C3750G(config)#interface vlan 20
C3750G(config-if)#ip address 192.168.20.1 255.255.255.0
C3750G(config-if)#ip helper-address 192.168.0.1

# Configure trunk port
C3750G(config)#interface GigabitEthernet 3/0/1
C3750G(config-if)#no switchport
C3750G(config-if)#ip address 192.168.0.2 255.255.255.0
C3750G(config-if)#no shutdown
C3750G(config-if)#speed 1000
C3750G(config-if)#duplex full

# Configure default route.
C3750G(config)#ip route 0.0.0.0 0.0.0.0 GigabitEthernet 3/0/1

# Assign ports to VLANs
C3750G(config)#interface range GigabitEthernet 3/0/2 - 5
C3750G(config-if-range)#switch port access vlan 10
C3750G(config-if-range)#switchport mode access
C3750G(config-if-range)#speed 1000
C3750G(config-if-range)#duplex full
C3750G(config-if-range)#no shut

C3750G(config)#interface range GigabitEthernet 3/0/6 - 12
C3750G(config-if-range)#switch port access vlan 20
C3750G(config-if-range)#switchport mode access
C3750G(config-if-range)#speed 1000
C3750G(config-if-range)#duplex full
C3750G(config-if-range)#no shut</code></pre>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Flash Cisco IOS on a C3750G Switch</title>
		<link>https://jameswsullivan.github.io/flash-cisco-ios-on-a-c3750g-switch/</link>
		
		<dc:creator><![CDATA[James]]></dc:creator>
		<pubDate>Sun, 18 Jun 2023 00:01:28 +0000</pubDate>
				<category><![CDATA[blog]]></category>
		<category><![CDATA[Cisco]]></category>
		<category><![CDATA[Cisco C3750G]]></category>
		<category><![CDATA[Cisco IOS]]></category>
		<category><![CDATA[Network Administration]]></category>
		<category><![CDATA[Networking]]></category>
		<guid isPermaLink="false">https://jameswsullivan.github.io/?p=2570</guid>

					<description><![CDATA[Flash Cisco IOS firmware on C3750G switch.]]></description>
										<content:encoded><![CDATA[
<h2 class="wp-block-heading">Environment</h2>



<ul>
<li>Switch Model: WS-C3750G-24PS-S</li>



<li>Old firmware: c3750-advipservicesk9-mz.122-44.SE4.bin</li>



<li>New firmware: c3750-ipservicesk9-mz.150-2.SE11.bin</li>
</ul>



<h2 class="wp-block-heading">Steps</h2>



<ol>
<li>Set up a TFTP server with SolarWinds TFTP Server. We assume the server IP is 192.168.0.100 .</li>



<li>On the switch, perform the following steps:</li>
</ol>



<pre class="wp-block-code"><code># Verify current IOS version, view current IOS bin file.
show version
show switch
dir flash:
# Assuming that your switch only have one flash.

# Delete old IOS firmware file.
delete /f /r flash:c3750-advipservicesk9-mz.122-44.SE4.bin

# Copy new IOS firmware from TFTP server.
copy tftp flash
# Follow the prompts and provide server IP and file name.

# Configure and verify boot file.
show boot

config t
boot system switch all flash:/c3750-ipservicesk9-mz.150-2.SE11.bin
exit
show boot

# Apply changes and reload switch.
write memory
reload</code></pre>



<h2 class="wp-block-heading">Troubleshooting</h2>



<p>When using the c3750-advipservicesk9-mz.122-44.SE4.bin firmware, SSH connection to the switch prompts the following message:</p>



<pre class="wp-block-code"><code>no matching key exchange method found. Their offer: diffie-hellman-group1-sha1</code></pre>



<p>Use the following command to connect (using PowerShell or CMD):</p>



<pre class="wp-block-code"><code>ssh -oKexAlgorithms=+diffie-hellman-group1-sha1 -c aes256-cbc username@ip_address
</code></pre>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Network Administration</title>
		<link>https://jameswsullivan.github.io/network-administration/</link>
		
		<dc:creator><![CDATA[James]]></dc:creator>
		<pubDate>Sat, 17 Jun 2023 19:51:05 +0000</pubDate>
				<category><![CDATA[blog]]></category>
		<category><![CDATA[Network Administration]]></category>
		<category><![CDATA[Networking]]></category>
		<category><![CDATA[System Administration]]></category>
		<category><![CDATA[Windows Systems Administration]]></category>
		<guid isPermaLink="false">https://jameswsullivan.github.io/?p=2567</guid>

					<description><![CDATA[Common network administration tools, commands, and notes.]]></description>
										<content:encoded><![CDATA[
<blockquote class="wp-block-quote">
<p>In Construction</p>
</blockquote>



<pre class="wp-block-code"><code>Command requires cmd with administrative privilege.

netsh wlan show wlanreport
</code></pre>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Skip Ctrl+P and Ctrl+Q in VS Code Shell/Terminal</title>
		<link>https://jameswsullivan.github.io/vs-code-commands-to-skip-shell/</link>
		
		<dc:creator><![CDATA[James]]></dc:creator>
		<pubDate>Sat, 17 Jun 2023 19:25:17 +0000</pubDate>
				<category><![CDATA[blog]]></category>
		<category><![CDATA[Software Development]]></category>
		<category><![CDATA[Visual Studio Code]]></category>
		<guid isPermaLink="false">https://jameswsullivan.github.io/?p=2564</guid>

					<description><![CDATA[Skip Ctrl+P and Ctrl+Q in VS Code Shell/Terminal using terminal.integrated.commandsToSkipShell in defaultSettings.json.]]></description>
										<content:encoded><![CDATA[
<p>Refer to this issue: <a href="https://github.com/microsoft/vscode/issues/94268">VS Code eats terminal keyboard shortcuts</a></p>



<h2 class="wp-block-heading">Solution:</h2>



<pre class="wp-block-code"><code>Go to VS Code - Manage - Settings (Ctrl + ,) - Features - Terminal - Integrated: commands To Skip Shell

Or, open VS Code - Manage - Settings - Search settings - search for:

terminal.integrated.commandsToSkipShell
or 
open the default settings JSON (defaultSettings.json)

And modify the corresponding section as follows:

"terminal.integrated.commandsToSkipShell": &#91;
      "-workbench.action.quickOpen",
      "-workbench.action.quickOpenView"
]</code></pre>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
