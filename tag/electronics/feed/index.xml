<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Electronics &#8211; howdy</title>
	<atom:link href="https://jameswsullivan.github.io/tag/electronics/feed/" rel="self" type="application/rss+xml" />
	<link>https://jameswsullivan.github.io/</link>
	<description></description>
	<lastBuildDate>Sat, 06 Jan 2024 23:09:41 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.4.2</generator>
	<item>
		<title>Refurbish Mac Mini A1347 (Late 2014 and Mid 2011) &#8211; Part 4</title>
		<link>https://jameswsullivan.github.io/refurbish-mac-mini-a1347-late-2014-and-mid-2011-part-4/</link>
		
		<dc:creator><![CDATA[James]]></dc:creator>
		<pubDate>Sun, 19 Nov 2023 18:29:10 +0000</pubDate>
				<category><![CDATA[blog]]></category>
		<category><![CDATA[Driver]]></category>
		<category><![CDATA[Electronics]]></category>
		<category><![CDATA[Hardware]]></category>
		<category><![CDATA[Mac Mini]]></category>
		<category><![CDATA[Mac Mini A1347]]></category>
		<category><![CDATA[macOS]]></category>
		<category><![CDATA[Repair]]></category>
		<category><![CDATA[Windows Systems Administration]]></category>
		<guid isPermaLink="false">https://jameswsullivan.github.io/?p=2827</guid>

					<description><![CDATA[Refurbish Mac Mini A1347 (Late 2014 and Mid 2011) - Part 4. Restore Mac Mini late-2014 and mid-2011. Install Windows 10 on Mac Mini mid-2011 (macmini5,1).]]></description>
										<content:encoded><![CDATA[
<h2 class="wp-block-heading" id="0-background">Background:</h2>



<p>I came across two more cheap Mac Mini A1347 (one is late-2014 the other is a mid-2011) that I can use for my projects. While restoring them, I came across a few things that&#8217;s worth noting.</p>



<h2 class="wp-block-heading">Issues:</h2>



<ol>
<li>The mid-2011 model has great difficulty with drivers (particularly display and sound) with Windows 10/11.</li>



<li>The mid-2011 model gets very hot when just under normal workload.</li>



<li>The late-2014 model automatically turns on after applying power (which is something I want to disable).</li>



<li>Install 16GB RAM and a second hard drive to the mid-2011 model.</li>
</ol>



<h2 class="wp-block-heading" id="1-issues">Solutions:</h2>



<p>1. The mid-2011 model has great difficulty with drivers (particularly display and sound) with Windows 10/11.</p>



<p>The mid-2011 model (<a href="https://support.apple.com/kb/sp632?locale=en_US" target="_blank" rel="noreferrer noopener">the 2.3Ghz variant</a>) has the Intel HD 3000 graphics card and the Cirrus Audio CS4206B sound card, both of which don&#8217;t have official driver support for anything beyond Windows 7. Plus, if Windows is installed using EFI, the screen is going to go black as soon as HD 3000&#8217;s display driver gets applied, and installing the Cirrus Audio driver will not work either. While you can force Windows to use the Basic Display Driver (Microsoft Basic Display Adapter) by uninstalling the display driver using <a href="https://www.wagnardsoft.com/display-driver-uninstaller-DDU-" target="_blank" rel="noreferrer noopener">DDU</a> and blocking the Hardware Ids using Group Policy (will explain in the last section of this post), it&#8217;s not an elegant solution after all and you&#8217;ll still suffer from no audio (from both HDMI and Cirrus Audio).</p>



<blockquote class="wp-block-quote">
<p>According to some research, it seems that there might be a solution by using DSDT modification/override so that the hardware can be properly &#8220;seen&#8221; and handled correctly by the OS under UEFI. But it&#8217;s not worth it for me to go down that rabbit hole to figure it out, so I just opted for Legacy BIOS mode (which also means that Windows 11 is not the best option). </p>
</blockquote>



<p>After installing Windows 10 using Legacy BIOS mode, everything works fine except the Display-Audio via HDMI despite the fact that all drivers have been installed and are showing that they work &#8220;correctly&#8221; in Device Manager. There is nothing indicating errors but HDMI and Thunderbolt ports both output no sound to the TV. But it&#8217;s acceptable in my case to use as a &#8220;media player&#8221; for my treadmill, which accepts a 3.5mm audio input to the treadmill&#8217;s speakers.</p>



<p>Download:</p>



<ul>
<li><a href="https://github.com/jameswsullivan/blog-file-share/blob/main/Macmini5%2C1-Drivers.7z">Windows 10 drivers for Mac Mini mid-2011 (Macmini5,1)</a></li>



<li><a href="https://www.wagnardsoft.com/display-driver-uninstaller-DDU-">DDU (Display Driver Uninstaller)</a> (<a href="https://www.intel.com/content/www/us/en/support/articles/000091878/graphics.html" target="_blank" rel="noreferrer noopener">reference</a>)</li>
</ul>



<p>Additionally, <a href="https://www.intel.com/content/www/us/en/support/articles/000090440/graphics.html" target="_blank" rel="noreferrer noopener">Intel HD 4000&#8217;s driver</a> seems to also work for Intel HD 3000, and its Display Audio driver is a newer version which supports &#8220;Windows 10&#8221;, but I still wasn&#8217;t able to get sound from HDMI/Thunderbolt.</p>



<p>2. The mid-2011 model gets very hot when just under normal workload.</p>



<p>I guess this was somewhat &#8220;by design&#8221; because I&#8217;ve done my due diligence to check, clean, and restore everything I can think of &#8211; heatsink, thermal paste, fan, etc.. It&#8217;s been restored to a condition that&#8217;s almost like new. After some Googling around I think it&#8217;s just how this particular model is, because the aluminum case is designed to act as a &#8220;heatsink&#8221; to dissipate heat, I guess I&#8217;m just used to newer model&#8217;s cooler and quieter designs.</p>



<p>3. The late-2014 model automatically turns on after applying power (which is something I want to disable).</p>



<p>One of the late-2014 models automatically turns on after applying power, and judging from what was originally installed on it, it seems to be used as a display device at a medical facility that runs a 24/7 slideshow. Disabling it was easy:</p>



<p>Get into Recovery Mode by <code>Option/Windows Key + R</code> , and open <strong>Terminal</strong> under <strong>Utilities</strong>, and type the following command:</p>



<pre class="wp-block-code"><code># To disable:
pmset autorestart 0

# If you want to enable "Power On After Power-Loss", set the value to 1 instead.
pmset autorestart 1</code></pre>



<p>4. Install 16GB RAM and a second hard drive to the mid-2011 model.</p>



<p>RAM and a second hard drive are one of the most popular upgrades done on this model, <a href="https://www.ifixit.com/Device/Mac_Mini_Mid_2011" target="_blank" rel="noreferrer noopener">ifixit has very well made instructions</a>.</p>



<div style="height:50px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">Forcing Windows 11 (in UEFI mode) to use Microsoft Basic Display Adapter without automatically installing drivers.</h2>



<p>Find the &#8220;Hardware Ids&#8221;:</p>



<pre class="wp-block-code"><code>Device Manager -- Display adapters -- Properties -- Details tab -- Select "Hardware Ids" from the Property drop-down -- Copy them to a text file.</code></pre>



<p>Block them using Group Policy:</p>



<pre class="wp-block-code"><code>Open Local Group Policy Editor, go to Computer Configuration -- Administrative Templates -- System -- Device Installation -- Device Installation Restrictions -- "Prevent installation of devices that match any of these device IDs."

Enable it and add the Hardware Ids you found from Device Manager.</code></pre>



<p>Additionally, you can configure the following to stop Windows 11 from automatically updating drivers:</p>



<pre class="wp-block-code"><code>Open Local Group Policy Editor, go to Computer Configuration -- Administrative Templates -- Windows Components -- Windows Update -- Manage Updates offered from Windows Update -- Enable “Do not include drivers with Windows Updates”</code></pre>



<pre class="wp-block-code"><code>Open Settings -- System -- About -- Advanced system settings -- Hardware tab -- Device Installation Settings -- Check "No (your device might not work as expected)"</code></pre>



<p>During the process, if the screen goes black after Windows 11 automatically applies a display driver (Intel HD 3000 in this case), you might need to get into Safe Mode to use <a href="https://www.wagnardsoft.com/display-driver-uninstaller-DDU-" target="_blank" rel="noreferrer noopener">DDU</a> to remove the driver. You can force powering off the machine three times to get into Advanced boot options (Recovery) mode, or you can try the following trick (because the OS is not frozen or dead, it&#8217;s just the screen that&#8217;s gone black, so you can still do things &#8220;blindly&#8221;):</p>



<pre class="wp-block-code"><code>Windows + R (Run) -- type "shutdown /r /o /t /f 0"</code></pre>



<p>Assuming there is nothing else blocking the reboot, it should go to the Advanced boot options menu upon restart.</p>



<p>If you need to install anything while in Safe Mode, enable Windows Installer using the following commands in a command prompt:</p>



<pre class="wp-block-code"><code>REG ADD “HKLM\SYSTEM\CurrentControlSet\Control\SafeBoot\Network\MSIServer” /VE /T REG_SZ /F /D “Service”

net start msiserver</code></pre>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Refurbish Mac Mini A1347 (Late 2014 ) – Part 3 &#8211; Remove EFI/BIOS Firmware Lock</title>
		<link>https://jameswsullivan.github.io/refurbish-mac-mini-a1347-late-2014-part-3-remove-efi-bios-firmware-lock/</link>
		
		<dc:creator><![CDATA[James]]></dc:creator>
		<pubDate>Tue, 03 Oct 2023 18:33:47 +0000</pubDate>
				<category><![CDATA[blog]]></category>
		<category><![CDATA[CH341A]]></category>
		<category><![CDATA[Electronics]]></category>
		<category><![CDATA[Hardware]]></category>
		<category><![CDATA[Mac Mini]]></category>
		<category><![CDATA[Mac Mini A1347]]></category>
		<category><![CDATA[Repair]]></category>
		<category><![CDATA[XGecu T56]]></category>
		<guid isPermaLink="false">https://jameswsullivan.github.io/?p=2811</guid>

					<description><![CDATA[Refurbish Mac Mini A1347 (Late 2014 ) – Part 3 - Remove EFI/BIOS Firmware Lock with CH341A Programmer]]></description>
										<content:encoded><![CDATA[
<h2 class="wp-block-heading">Background:</h2>



<p>Two of the Mac Minis I bought on eBay were really cheap and had their HDD and accessories removed, everything&#8217;s been in working order (hardware wise) until I found that I was hit with a &#8220;lock&#8221; screen prompting for password and unable to enter Recovery Mode (Command/Windows Key + R).</p>



<figure class="wp-block-image size-large"><img fetchpriority="high" decoding="async" width="1024" height="607" src="https://jameswsullivan.github.io/wp-content/uploads/2023/10/MacMiniEFILock-1024x607.png" alt="" class="wp-image-2812" srcset="https://jameswsullivan.github.io/wp-content/uploads/2023/10/MacMiniEFILock-1024x607.png 1024w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/MacMiniEFILock-300x178.png 300w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/MacMiniEFILock-768x455.png 768w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/MacMiniEFILock-700x415.png 700w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/MacMiniEFILock.png 1326w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure>



<h2 class="wp-block-heading">Solution:</h2>



<p>The solution is quite straightforward with the right tools:</p>



<ol>
<li>Use a BIOS/Chip programmer to extract firmware data. The BIOS chips on my Mac Minis are: <code>MX25L6406E</code> and <code>N25Q064A</code>. NeoProgrammer was able to detect <code>N25Q064A</code> automatically, but for <code>MX25L6406E</code>, it was only able to detect the series and the specific chip needs to be selected manually.</li>



<li>Open the extracted <code>.bin</code> file with a HEX editor (<a href="https://mh-nexus.de/en/hxd/">HxD</a> was what I used), search for <code>$SVS</code> , fill the section with <code>FF</code> . Save file.</li>



<li>Wipe the BIOS chip, write the modified <code>.bin</code> file back to the chip.</li>



<li>EFI/BIOS Firmware Lock is gone.</li>
</ol>



<p>The steps I omitted were <a href="https://www.ifixit.com/Teardown/Mac+mini+Late+2014+Teardown/30410">how to open Mac Mini and remove the logic board</a>. I assume that if you&#8217;re already doing this level of DIY, this should already be a simple process. I also removed the AirPort module to allow for more space to fit the clip.</p>



<p><strong>Tools needed:</strong></p>



<ul>
<li>CH341A programmer (with the SOP8 SOIC8 clip).</li>



<li>NeoProgrammer V2.2.0.10</li>



<li>HxD HEX Editor</li>



<li>[Optional]: Multimeter with probes thin enough to test the connectivity/continuity between the clip and CH341A.</li>



<li>[Optional]: Microscope. It&#8217;s gonna be really easy to see the chip&#8217;s part number with a microscope.</li>
</ul>



<p>There are a lot of alternatives that you could use to accomplish this task, for me the CH341A was the cheapest and easiest to come by. Here is a list of possible alternatives:</p>



<ul>
<li><strong>Programmer:</strong> <a href="http://www.xgecu.com/en/TL866_main.html">XGecu T48/T56</a> universal programmer. This is probably the best one out there if you want a tool that supports almost any chip available out there. It&#8217;s a little pricey for small jobs like this one, but it&#8217;s on my shopping list.</li>



<li><strong>Software:</strong> AsProgrammer, Colibri (compatible with CH341A); Xgpro (comes with XGecu programmer, not sure if it&#8217;s compatible with CH341A).</li>
</ul>



<p>Colibri doesn&#8217;t seem to support as many chips as AsProgrammer and NeoProgrammer do, but all of them were fairly straightforward to use.</p>



<p><strong>Pro Tips:</strong></p>



<ul>
<li>Datasheet: <a href="https://github.com/jameswsullivan/blog-file-share/blob/main/MX25L6406E-MacronixInternational.pdf">MX25L6406E</a> and <a href="https://github.com/jameswsullivan/blog-file-share/blob/main/N25Q064A-MicronTechnology.pdf">N25Q064A</a> .</li>



<li>The CH341A programmer and the clip should theoretically work with any 24 and 25 series chips.</li>



<li>See the closeup pictures from the gallery below, the purple wire should match PIN #1 on the chip, and when it&#8217;s clipped to CH341A, PIN #1 faces toward the lever, away from the USB port.</li>



<li>Use a multimeter to test the continuity after fitting the clip onto the BIOS chip. It&#8217;s not absolutely necessary but it saved me a lot of time when trying to get a solid connection.</li>
</ul>



<p>A video will be provided at a later time to better illustrate the process.</p>



<figure class="wp-block-gallery has-nested-images columns-2 is-cropped wp-block-gallery-1 is-layout-flex wp-block-gallery-is-layout-flex">
<figure class="wp-block-image size-large"><a href="https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-01-scaled.jpg"><img decoding="async" width="1024" height="576" data-id="2816" src="https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-01-1024x576.jpg" alt="" class="wp-image-2816" srcset="https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-01-1024x576.jpg 1024w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-01-300x169.jpg 300w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-01-768x432.jpg 768w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-01-1536x864.jpg 1536w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-01-2048x1152.jpg 2048w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-01-700x394.jpg 700w" sizes="(max-width: 1024px) 100vw, 1024px" /></a></figure>



<figure class="wp-block-image size-large"><a href="https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-02-scaled.jpg"><img decoding="async" width="1024" height="576" data-id="2817" src="https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-02-1024x576.jpg" alt="" class="wp-image-2817" srcset="https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-02-1024x576.jpg 1024w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-02-300x169.jpg 300w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-02-768x432.jpg 768w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-02-1536x864.jpg 1536w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-02-2048x1152.jpg 2048w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-02-700x394.jpg 700w" sizes="(max-width: 1024px) 100vw, 1024px" /></a></figure>



<figure class="wp-block-image size-large"><a href="https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-03-scaled.jpg"><img loading="lazy" decoding="async" width="1024" height="576" data-id="2815" src="https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-03-1024x576.jpg" alt="" class="wp-image-2815" srcset="https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-03-1024x576.jpg 1024w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-03-300x169.jpg 300w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-03-768x432.jpg 768w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-03-1536x864.jpg 1536w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-03-2048x1152.jpg 2048w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-03-700x394.jpg 700w" sizes="(max-width: 1024px) 100vw, 1024px" /></a></figure>



<figure class="wp-block-image size-large"><a href="https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-04-scaled.jpg"><img loading="lazy" decoding="async" width="1024" height="576" data-id="2814" src="https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-04-1024x576.jpg" alt="" class="wp-image-2814" srcset="https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-04-1024x576.jpg 1024w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-04-300x169.jpg 300w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-04-768x432.jpg 768w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-04-1536x864.jpg 1536w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-04-2048x1152.jpg 2048w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-04-700x394.jpg 700w" sizes="(max-width: 1024px) 100vw, 1024px" /></a></figure>



<figure class="wp-block-image size-large"><a href="https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-05.jpg"><img loading="lazy" decoding="async" width="1024" height="1024" data-id="2819" src="https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-05-1024x1024.jpg" alt="" class="wp-image-2819" srcset="https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-05-1024x1024.jpg 1024w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-05-300x300.jpg 300w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-05-150x150.jpg 150w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-05-768x768.jpg 768w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-05-1536x1536.jpg 1536w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-05-2048x2048.jpg 2048w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-05-140x140.jpg 140w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-05-380x380.jpg 380w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-05-600x600.jpg 600w" sizes="(max-width: 1024px) 100vw, 1024px" /></a></figure>



<figure class="wp-block-image size-large"><a href="https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-06-scaled.jpg"><img loading="lazy" decoding="async" width="1024" height="1024" data-id="2818" src="https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-06-1024x1024.jpg" alt="" class="wp-image-2818" srcset="https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-06-1024x1024.jpg 1024w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-06-300x300.jpg 300w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-06-150x150.jpg 150w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-06-768x768.jpg 768w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-06-1536x1536.jpg 1536w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-06-2048x2048.jpg 2048w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-06-140x140.jpg 140w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-06-380x380.jpg 380w, https://jameswsullivan.github.io/wp-content/uploads/2023/10/CH341A-MACMINI-06-600x600.jpg 600w" sizes="(max-width: 1024px) 100vw, 1024px" /></a></figure>
</figure>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Repair ProForm 505 CST Treadmill</title>
		<link>https://jameswsullivan.github.io/repair-proform-505-cst-treadmill/</link>
		
		<dc:creator><![CDATA[James]]></dc:creator>
		<pubDate>Sun, 16 Jul 2023 21:08:14 +0000</pubDate>
				<category><![CDATA[blog]]></category>
		<category><![CDATA[Electronics]]></category>
		<category><![CDATA[MOSFET]]></category>
		<guid isPermaLink="false">https://jameswsullivan.github.io/?p=2637</guid>

					<description><![CDATA[Repair ProForm 505 CST Treadmill.]]></description>
										<content:encoded><![CDATA[
<p>I recently picked up a used, broken ProForm 505 CST Treadmill from someone at a really good price and decided to experiment with a repair myself, because the symptoms didn&#8217;t sound like it&#8217;s irreparable.</p>



<p><strong>And I was right</strong> &#8211; the only thing I needed to replace was an IRFP250 MOSFET.</p>



<blockquote class="wp-block-quote">
<p><strong>Symptom:</strong> The control panel turns on fine, but the motor will run for a fraction of a second and then immediately stop.</p>
</blockquote>



<p>The repair is very easy: de-solder the bad MOSFET and replace it with a new one.</p>



<p>The bad MOSFET was shot, you can diagnose with a multimeter:</p>



<ul>
<li>Put the multimeter in continuity or diode testing mode, you should see a voltage drop between the pins on a good MOSFET and the pins shouldn&#8217;t have continuity between each other.</li>



<li>On the bad one, the multimeter beeps in continuity mode on all three pins, meaning the MOSFET is completely shot.</li>
</ul>



<figure class="wp-block-image size-large is-resized"><a href="https://jameswsullivan.github.io/wp-content/uploads/2023/07/repair-treadmill-01-scaled.jpg"><img loading="lazy" decoding="async" width="1024" height="576" src="https://jameswsullivan.github.io/wp-content/uploads/2023/07/repair-treadmill-01-1024x576.jpg" alt="Motor Control Board" class="wp-image-2639" style="width:768px;height:432px" srcset="https://jameswsullivan.github.io/wp-content/uploads/2023/07/repair-treadmill-01-1024x576.jpg 1024w, https://jameswsullivan.github.io/wp-content/uploads/2023/07/repair-treadmill-01-300x169.jpg 300w, https://jameswsullivan.github.io/wp-content/uploads/2023/07/repair-treadmill-01-768x432.jpg 768w, https://jameswsullivan.github.io/wp-content/uploads/2023/07/repair-treadmill-01-1536x864.jpg 1536w, https://jameswsullivan.github.io/wp-content/uploads/2023/07/repair-treadmill-01-2048x1152.jpg 2048w, https://jameswsullivan.github.io/wp-content/uploads/2023/07/repair-treadmill-01-700x394.jpg 700w" sizes="(max-width: 1024px) 100vw, 1024px" /></a></figure>



<figure class="wp-block-image size-large is-resized"><a href="https://jameswsullivan.github.io/wp-content/uploads/2023/07/repair-treadmill-02-scaled.jpg"><img loading="lazy" decoding="async" width="1024" height="576" src="https://jameswsullivan.github.io/wp-content/uploads/2023/07/repair-treadmill-02-1024x576.jpg" alt="IRFP250 MOSFET" class="wp-image-2641" style="width:768px;height:432px" srcset="https://jameswsullivan.github.io/wp-content/uploads/2023/07/repair-treadmill-02-1024x576.jpg 1024w, https://jameswsullivan.github.io/wp-content/uploads/2023/07/repair-treadmill-02-300x169.jpg 300w, https://jameswsullivan.github.io/wp-content/uploads/2023/07/repair-treadmill-02-768x432.jpg 768w, https://jameswsullivan.github.io/wp-content/uploads/2023/07/repair-treadmill-02-1536x864.jpg 1536w, https://jameswsullivan.github.io/wp-content/uploads/2023/07/repair-treadmill-02-2048x1152.jpg 2048w, https://jameswsullivan.github.io/wp-content/uploads/2023/07/repair-treadmill-02-700x394.jpg 700w" sizes="(max-width: 1024px) 100vw, 1024px" /></a></figure>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
