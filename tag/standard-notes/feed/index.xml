<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Standard Notes &#8211; howdy</title>
	<atom:link href="https://jameswsullivan.github.io/tag/standard-notes/feed/" rel="self" type="application/rss+xml" />
	<link>https://jameswsullivan.github.io/</link>
	<description></description>
	<lastBuildDate>Sat, 01 Apr 2023 02:10:35 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.3.1</generator>
	<item>
		<title>Set up Docker on Ubuntu Server</title>
		<link>https://jameswsullivan.github.io/set-up-docker-on-ubuntu-server/</link>
		
		<dc:creator><![CDATA[James]]></dc:creator>
		<pubDate>Tue, 21 Sep 2021 06:14:07 +0000</pubDate>
				<category><![CDATA[blog]]></category>
		<category><![CDATA[Docker]]></category>
		<category><![CDATA[Hosting]]></category>
		<category><![CDATA[Linux]]></category>
		<category><![CDATA[Self-Hosting]]></category>
		<category><![CDATA[Standard Notes]]></category>
		<category><![CDATA[Ubuntu]]></category>
		<guid isPermaLink="false">https://www.alexchen.net/?p=1638</guid>

					<description><![CDATA[Setting up Ubuntu Server, SSH, UFW, Nginx, and Docker.]]></description>
										<content:encoded><![CDATA[
<h2 class="wp-block-heading">Environment: Windows Server 2019, Hyper-V, Ubuntu Server 20.04.3 LTS.</h2>



<p>1. After Ubuntu Server is installed on a VM (with a clean and minimum installation without any preloaded packages), set up Docker and OpenSSH.</p>



<pre class="wp-block-code"><code># Install OpenSSH
apt upgrade
apt update
apt install openssh-server

# Check SSH Status
systemctl status ssh

# Allow ssh over UFW firewall
ufw allow ssh</code></pre>



<p>2. Enable UFW, check status, and configure rules.</p>



<pre class="wp-block-code"><code># Enable UFW
ufw enable

# Check status and rules
ufw status

# Check status and make results numbered
ufw status numbered

# Disable UFW
ufw disable

# Block IP
ufw deny from IP-Address

# Block by subnet
ufw deny from IP/CIDR

# Block connections on interface
ufw deny in on eth0 from IP-Address

# Allow commands:
ufw allow from IP-Address
ufw allow in on eth0 from IP-Address

# Delete rule
ufw status numbered
ufw delete &#91;number]

# Allow by protocol
ufw allow from IP-Address proto tcp to any port 22
ufw allow from IP/CIDR proto tcp to any port 22
ufw allow proto tcp from any to any port 80,443</code></pre>



<p>3. Disable ipv6 on Ubuntu Server.</p>



<pre class="wp-block-code"><code># Add
net.ipv6.conf.all.disable_ipv6=1
net.ipv6.conf.default.disable_ipv6=1
net.ipv6.conf.lo.disable_ipv6=1
# to file /etc/sysctl.conf</code></pre>



<p>4. Reduce Ubuntu shutdown time.</p>



<pre class="wp-block-code"><code># Edit /etc/systemd/system.conf and uncomment DefaultTimeoutStopSec=90s and set it to a desired value

DefaultTimeoutStopSec=15s</code></pre>



<p>5. Install Docker</p>



<pre class="wp-block-code"><code># Remove existing Docker installations, if any
apt remove docker docker-engine docker.io containerd runc

# Install using the repository
apt update
apt install apt-transport-https ca-certificates curl gnupg lsb-release

# Add Docker's official GPG key
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

# Set up stable repository
echo \
"deb &#91;arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
$(lsb_release -cs) stable" \
| sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

# Install Docker engine
apt update
apt install docker-ce docker-ce-cli containerd.io

# Verify that Docker Engine is correctly installed
docker version</code></pre>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
