<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Windows Customization &#8211; howdy</title>
	<atom:link href="https://jameswsullivan.github.io/tag/windows-customization/feed/" rel="self" type="application/rss+xml" />
	<link>https://jameswsullivan.github.io/</link>
	<description></description>
	<lastBuildDate>Wed, 16 Aug 2023 03:47:14 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.3</generator>
	<item>
		<title>Migrate Windows 10 from SATA to USB</title>
		<link>https://jameswsullivan.github.io/migrate-windows-10-from-sata-to-usb/</link>
		
		<dc:creator><![CDATA[James]]></dc:creator>
		<pubDate>Wed, 16 Aug 2023 03:46:27 +0000</pubDate>
				<category><![CDATA[blog]]></category>
		<category><![CDATA[Hardware]]></category>
		<category><![CDATA[System Administration]]></category>
		<category><![CDATA[Windows Customization]]></category>
		<category><![CDATA[Windows Systems Administration]]></category>
		<guid isPermaLink="false">https://jameswsullivan.github.io/?p=2766</guid>

					<description><![CDATA[Use Hasleo WinToUSB to migrate Windows 10 from a SATA installation onto a USB connected drive.]]></description>
										<content:encoded><![CDATA[
<h2 class="wp-block-heading">Background:</h2>



<p>I have an older Lenovo M93p Tiny computer that I use for some file sharing work, it&#8217;s been running fine until I recently noticed some degradation of file transfer speed between this machine and my file server. It turned out that the PoE switch was the main culprit, probably due to exhausted RAM/buffer or high CPU usage, and a reboot resolved the network performance issue. However, the file transfer speed was still not ideal &#8211; under perfect condition, file transfer between two computers should hover around 100 &#8211; 113 MB/s, but I was only getting around 40 MB/s max.</p>



<p>For better illustration, here are how the two drives are connected:</p>



<ul>
<li>a 120GB SSD is directly installed inside the unit, connected via the SATA (SATA 2, 3.0Gb/s) port. </li>



<li>a 1TB old Apple HDD connected using the <a href="https://www.google.com/search?sca_esv=557322196&amp;rlz=1C1GCEA_enUS1010US1010&amp;q=12.7mm+DVD-ROM+Hard+Drive+Caddy&amp;tbm=shop&amp;source=lnms&amp;sa=X&amp;ved=2ahUKEwiAibG6mOCAAxVFlGoFHZUkDpcQ0pQJegQICxAB&amp;biw=1285&amp;bih=648&amp;dpr=1.88" data-type="link" data-id="https://www.google.com/search?sca_esv=557322196&amp;rlz=1C1GCEA_enUS1010US1010&amp;q=12.7mm+DVD-ROM+Hard+Drive+Caddy&amp;tbm=shop&amp;source=lnms&amp;sa=X&amp;ved=2ahUKEwiAibG6mOCAAxVFlGoFHZUkDpcQ0pQJegQICxAB&amp;biw=1285&amp;bih=648&amp;dpr=1.88" target="_blank" rel="noreferrer noopener">12.7mm DVD-ROM Hard Drive Caddy</a>, and connected to the computer via USB (with Lenovo&#8217;s optical drive VESA expansion bracket).</li>
</ul>



<p>After some experimentation, it appears that the drive caddy might be the bottleneck, so I decided to switch the two drives.</p>



<p>However, since the OS was initially installed onto the SATA drive, switching to USB will cause boot issues and also due to driver mismatch, a simple BCD rebuild won&#8217;t work. But I managed to make it work with <a href="https://www.easyuefi.com/" target="_blank" rel="noreferrer noopener">Hasleo WinToUSB</a>, <strong>here are the steps</strong>:</p>



<ol>
<li>Clone the 120GB drive to another temporary drive, install (use the SATA port) and boot into Windows using the temporary drive (rebuild BCD if needed).</li>



<li>Connect the 120GB drive to the optical drive caddy (USB).</li>



<li>Use Hasleo WinToUSB&#8217;s <code>Windows To Go USB</code> function to clone your <code>Current Windows OS</code> to the 120GB drive that&#8217;s connected via USB.</li>



<li>Remove the temporary drive, connect the 1TB HDD via SATA, boot into BIOS and change boot device to the USB device accordingly (mine shows as USB FDD).</li>
</ol>



<p>A second reboot might be needed for the machine to pickup the USB bootable device.</p>



<h2 class="wp-block-heading">How to rebuild BCD (Windows 10 UEFI):</h2>



<ul>
<li>Use a WinPE or Windows installation USB to boot into a command prompt (or if you are able to enter command prompt using F8 or Advanced Boot Options).</li>



<li>Use diskpart to assign a letter to the EFI partition:</li>
</ul>



<pre class="wp-block-code"><code>diskpart
list disk
sel disk X

# X is your disk number

list vol

# find the volume that's FAT32 (the EFI partition).

sel vol X
assign letter=Z

exit</code></pre>



<ul>
<li>Now switch to the Z drive, and run the following commands:</li>
</ul>



<pre class="wp-block-code"><code>cd EFI\Microsoft\Boot
del BCD
# or: ren BCD BCD.bk if you want to be safe.

bootrec /rebuildbcd

# if bootrec doesn't work, try
bcdboot X:\windows /s Z: /f UEFI
# where X is your windows installation's location.</code></pre>



<h2 class="wp-block-heading">Afterthought:</h2>



<p>There might be a way to inject/change the correct drivers (from SATA to USB) so that Windows can boot correctly, but I wasn&#8217;t successful with it.</p>



<p>The reason a Windows To Go clone was needed is that after switching the drive directly from SATA to USB and try to boot, the drive would still be recognized as a SATA drive in BIOS, and attempting a normal boot (with or without BCD rebuild) would result in a blue screen with INACCESSIBLE_BOOT_DEVICE error. However, Windows was able to boot into Safe Mode, which indicates the driver mismatch being the culprit.</p>



<p>Using Hasleo WinToUSB was a quicker solution, I might decided to experiment with the driver sometime in the future with a spare machine.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>让手机变为电脑的遥控器</title>
		<link>https://jameswsullivan.github.io/use-phone-as-your-computers-remote/</link>
		
		<dc:creator><![CDATA[James]]></dc:creator>
		<pubDate>Sat, 21 Nov 2009 16:08:00 +0000</pubDate>
				<category><![CDATA[archive]]></category>
		<category><![CDATA[System Administration]]></category>
		<category><![CDATA[Windows Customization]]></category>
		<category><![CDATA[Windows Systems Administration]]></category>
		<guid isPermaLink="false">https://jameswsullivan.github.io/?p=2604</guid>

					<description><![CDATA[用Salling Clicker和Connectify将手机变为电脑的遥控器]]></description>
										<content:encoded><![CDATA[
<blockquote class="wp-block-quote">
<p>此文系早年博客的备份，仅用于参考学习。<br>This article is an archival copy of my early years&#8217; blog posts.</p>
</blockquote>



<p>虽说现在只要有钱有设备，电脑可以实现的功能是无穷的，可是对于我们一般用户来说，影视作品里那种遥控操作计算机、各种电子设备无线互联的技术离我们还是很遥远。但是，我们没有尖端设备不要紧，我们有基础的蓝牙和Wi-Fi，再配上合适的软件，让手机变成电脑的遥控器，在会议或Party中潇洒一下还是不成问题的。</p>



<p><strong>硬件需求：</strong>支持Java的手机（支持Wi-Fi最好，但至少要支持蓝牙），笔记本电脑需带有Wi-Fi或蓝牙<br><strong>软件需求：</strong>Salling Clicker，Connectify</p>



<p>这里先对这两款软件进行一下简单的介绍。Salling Clicker 是一款用于手机遥控电脑的软件，它可以在线更新以支持绝大部分最新的机型，当手机端与电脑端通过蓝牙或Wi-Fi建立连接之后，便可以通过手机控制iTunes，PPT，和Windows Media Player等，也可以控制电脑的鼠标移动、音量和关机等操作。它是通过编写好的脚本来对电脑端软件进行操控的，在它的官方网站上还提供了用于操控其他软件的脚本，但可惜的是大多数都是针对多媒体播放的，比如Winamp和PowerDVD。</p>



<p>Connectify其实是一款用于共享上网的软件，它可以将带有Wi-Fi功能的笔记本变成一个无线热点，使得其他设备可以像使用路由一样通过该热点组成局域网或实现共享上网。在这里使用它的意义是，蓝牙的通信距离比Wi-Fi要小，那么用这款软件将要控制的笔记本变成一个热点，再用手机端的Salling Clicker通过该热点以Wi-Fi方式连接，那么其实就实现了电脑与手机不需通过无线路由的Wi-Fi直连，而且这种方法也为没有蓝牙的笔记本实现遥控提供了可能。</p>



<p>由于蓝牙连接相对比较简单，我在这里主要说明如何实现Wi-Fi直连。我的配置环境是：windows 7英文版, Salling Clicker 3.5, Connectify, 手机是索爱P1i。下面是实现的步骤：</p>



<h2 class="wp-block-heading">Salling Clicker：</h2>



<p>安装好Salling Clicker后，首次运行会弹出Device Setup Assistant，在这里可以选择手机的型号，选好后软件会自动提供给你适用于该手机的手机端软件，点击Copy to Desktop，然后将其拷入手机进行安装。如果你的手机型号并未列入其中，可以点击Update List后再试，如果仍未出现，则可以选择另一款与你的手机具有相同操作系统的手机。（图一）</p>



<figure class="wp-block-image size-full"><img decoding="async" fetchpriority="high" width="436" height="399" src="https://jameswsullivan.github.io/wp-content/uploads/2023/06/BlogUsePhoneAsComputerRemote01.jpg" alt="" class="wp-image-2605" srcset="https://jameswsullivan.github.io/wp-content/uploads/2023/06/BlogUsePhoneAsComputerRemote01.jpg 436w, https://jameswsullivan.github.io/wp-content/uploads/2023/06/BlogUsePhoneAsComputerRemote01-300x275.jpg 300w" sizes="(max-width: 436px) 100vw, 436px" /></figure>



<p>在下一个界面里它会询问你是否以蓝牙方式连接，可以在Select Phone中选择已开启蓝牙的手机，这一步我们直接跳过。再下一步里，它会设置Wi-Fi连接，并且要求你的手机与电脑同时存在于一个无线网络中。选中I want to use this feature，并填写连接密码（相当于蓝牙配对密码）。（图二）</p>



<figure class="wp-block-image size-full"><img decoding="async" width="436" height="399" src="https://jameswsullivan.github.io/wp-content/uploads/2023/06/BlogUsePhoneAsComputerRemote02.jpg" alt="" class="wp-image-2606" srcset="https://jameswsullivan.github.io/wp-content/uploads/2023/06/BlogUsePhoneAsComputerRemote02.jpg 436w, https://jameswsullivan.github.io/wp-content/uploads/2023/06/BlogUsePhoneAsComputerRemote02-300x275.jpg 300w" sizes="(max-width: 436px) 100vw, 436px" /></figure>



<p>关闭设置界面，电脑端Salling Clicker的设置就完成了。</p>



<h2 class="wp-block-heading">Connectify：</h2>



<p>Connectify是一款傻瓜软件，安装后界面如下：（图三）</p>



<figure class="wp-block-image size-full"><img decoding="async" width="314" height="374" src="https://jameswsullivan.github.io/wp-content/uploads/2023/06/BlogUsePhoneAsComputerRemote03.jpg" alt="" class="wp-image-2607" srcset="https://jameswsullivan.github.io/wp-content/uploads/2023/06/BlogUsePhoneAsComputerRemote03.jpg 314w, https://jameswsullivan.github.io/wp-content/uploads/2023/06/BlogUsePhoneAsComputerRemote03-252x300.jpg 252w" sizes="(max-width: 314px) 100vw, 314px" /></figure>



<p>在WiFi Name与Passphrase里分别填写无线热点的名称与连接密码，在Internet中选择是否共享上网，因为我们主要用来实现Wi-Fi直连，所以只需选择No Internet Sharing，最后点击Start Hotspot即可，注意它要求密码为8-12位。</p>



<h2 class="wp-block-heading">手机端：</h2>



<p>用手机搜索该Wi-Fi热点并连接，打开Salling Clicker，选择Connect with WiFi…， 它会自动搜索电脑端，然后选择你的笔记本名称进行连接，成功连接之后，你就可以潇洒的用手机操控电脑了，如果你的手机有一个足够大的触屏，那么效果会更上一层楼。</p>



<p>Salling Clicker手机端的使用很简单，笔者在这里只在PPT操作方面简单罗嗦一句：数字键可以直接切换到特定幻灯片，比如按22即切换到第22张幻灯。</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>编辑鼠标指针图标</title>
		<link>https://jameswsullivan.github.io/make-left-hand-mouse-cursor/</link>
		
		<dc:creator><![CDATA[James]]></dc:creator>
		<pubDate>Tue, 21 Apr 2009 15:10:00 +0000</pubDate>
				<category><![CDATA[archive]]></category>
		<category><![CDATA[Mouse Cursor]]></category>
		<category><![CDATA[System Administration]]></category>
		<category><![CDATA[Windows Customization]]></category>
		<category><![CDATA[Windows Systems Administration]]></category>
		<guid isPermaLink="false">https://jameswsullivan.github.io/?p=2583</guid>

					<description><![CDATA[修改鼠标指针图标为左手习惯。]]></description>
										<content:encoded><![CDATA[
<blockquote class="wp-block-quote">
<p>此文系早年博客的备份，仅用于参考学习。<br>This article is an archival copy of my early years&#8217; blog posts.</p>
</blockquote>



<p>一直以来都希望能练习使用左手，可是无奈生活中的大多数东西都是以右手习惯设计的，比如：尽管鼠标的按键可以更改为左手习惯，可是鼠标指针却依旧全都是向右指的，Windows并没提供相应的反向指针。但这并不能妨碍我们练习使用左手，既然它不提供，我们就自己DIY。</p>



<p>I have been planning to practice my left hand for a long time, but most things around us are designed for right hand users, for instance, even though we can switch the mouse&#8217;s primary and secondary buttons, Windows doesn&#8217;t provide us with left-hand accustomed cursors. But for us DIYers, this tiny problem can&#8217;t beat us.</p>



<p>在Google上搜到这样一个工具：ArtCursors (点击下载)<br>I searched Google and found this tool: ArtCursors(click to download)</p>



<p>这是一个可以对鼠标指针文件(.cur)进行创建和编辑的小工具，使用它几乎可以制作任何你想要的鼠标指针。在这里我对它不做过详尽的说明，仅将修改现有光标文件的方法略述一下，以Windows Vista系统为例：</p>



<p>This tool can create or edit cursor files(.cur), by using it you can create any sort of cursor as you like. Here, I do not talk about how to create a cursor, just demonstrate how to edit an existed cursor file. (my OS: Windows Vista.)</p>



<p>1 打开目录C:\windows\cursors\,将 aero_arrow.cur,aero_working.cur,aero_link.cur,aero_helpsel.cur 四个文件复制到桌面，然后依次更名为aero_arrow_left.cur …</p>



<p>Step 1: Open this directory: C:\windows\cursors\ , copy the following files to a new folder: aero_arrow.cur,aero_working.cur,aero_link.cur,aero_helpsel.cur , and then rename them as aero_arrow_left.cur …<br>There are other cursors you can edit, but these four are the most commonly used, you can edit the others in times of need.</p>



<p>2 打开ArtCursors，弹出创建光标的对话框，点取消。然后打开刚刚更名后的文件进行编辑，我以aero_arrow为例。打开aero_arrow_left，选择Effects &#8212;- Flip &#8212;- Horizontally。这时箭头已经镜像过去了，但是还要设置Hot Spot，即点击时的作用点。选择 Cursor &#8212;- Hot Spot。对于这个的调整可能因不同的光标而不同，但默认大小的光标均是32&#215;32的，aero_arrow的默认Hot Spot为(0,0)，那么既然进行了翻转，将新的Hot Spot指定为(32,0)即可。<br>Step 2: Run ArtCursor, it will ask you to create a new cursor, click Cancel. Then open a renamed cursor file, I take aero_arrow_left.cur as the example. Choose Effects &#8212;- Flip &#8212;- Horizontally, after this you can get an arrow pointed to right. And then we need to set its Hot Spot(it&#8217;s the location where you mouse action is executed), choose Cursor &#8212;- Hot Spot. As for this option, the coordinate of Hot Spot may be different from one cursor to another, but windows&#8217; default cursors are all sized 32&#215;32. So, you can set the new Hot Spot as (32,0).</p>



<p>3 转换其他静态光标的方法均与此类似，但在处理多帧的光标(如aero_working_left.cur)时要注意，需要将光标的每一帧都进行翻转。但Hot Spot只需设置一次。如图：</p>



<p>Step 3: The steps are similar when you edit other cursors, but if you edit a multi-frame cursor(for example like aero_working_left.cur), you need to Flip every frame, but you just need to set the Hot Spot only once. Refer to the image below:</p>



<figure class="wp-block-image size-large"><img decoding="async" loading="lazy" width="1024" height="616" src="https://jameswsullivan.github.io/wp-content/uploads/2023/06/BlogMakeLeftMouseCursor01-1024x616.jpg" alt="" class="wp-image-2584" srcset="https://jameswsullivan.github.io/wp-content/uploads/2023/06/BlogMakeLeftMouseCursor01-1024x616.jpg 1024w, https://jameswsullivan.github.io/wp-content/uploads/2023/06/BlogMakeLeftMouseCursor01-300x180.jpg 300w, https://jameswsullivan.github.io/wp-content/uploads/2023/06/BlogMakeLeftMouseCursor01-768x462.jpg 768w, https://jameswsullivan.github.io/wp-content/uploads/2023/06/BlogMakeLeftMouseCursor01-700x421.jpg 700w, https://jameswsullivan.github.io/wp-content/uploads/2023/06/BlogMakeLeftMouseCursor01.jpg 1280w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure>



<p>4 将修改好的光标文件保存并复制到Windows光标文件夹内，然后在控制面板 &#8212;- 鼠标 &#8212;- 指针 &#8212;- 自定义 中将 正常选择，帮助选择，后台运行，链接选择 四项对应地设置为修改后的光标即可。</p>



<p>Step 4: Finally, copy your modified cursor files to the original cursor directory, then open the Control Pane &#8212;- Mouse Properties &#8212;- Pointers, and change the Normal Select, Help Select, Working in Background, and Link Select to these cursors.<br>After doing this, our job is done, you can work with your left-hand cursors now.</p>



<p>注：之所以只修改这四个，是因为他们是最常用的，其他有些不经常遇见的，也就可改可不改了，想修改的朋友自行按照上述方法修改即可。</p>



<p>关键字：Windows光标编辑，自定义Windows光标，个性化Windows光标，个性化系统光标指针，编辑鼠标指针图标，自定义个性化鼠标指针图标，左手习惯的鼠标指针，左手鼠标指针图标，箭头向右的光标，鼠标箭头向右指，左手习惯光标，customize/edit/create windows cursors, customize/edit/create mouse cursors, customized cursors for left-hand users, mouse cursors for left-hand computer users</p>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
