<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>DevOps &#8211; howdy</title>
	<atom:link href="https://jameswsullivan.github.io/tag/devops/feed/" rel="self" type="application/rss+xml" />
	<link>https://jameswsullivan.github.io/</link>
	<description></description>
	<lastBuildDate>Tue, 01 Aug 2023 20:18:22 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.4.1</generator>
	<item>
		<title>MediaWiki Initial Config</title>
		<link>https://jameswsullivan.github.io/mediawiki-initial-config/</link>
		
		<dc:creator><![CDATA[James]]></dc:creator>
		<pubDate>Sun, 08 Jan 2012 04:57:00 +0000</pubDate>
				<category><![CDATA[archive]]></category>
		<category><![CDATA[DevOps]]></category>
		<category><![CDATA[MediaWiki]]></category>
		<category><![CDATA[php]]></category>
		<category><![CDATA[Software Development]]></category>
		<guid isPermaLink="false">https://jameswsullivan.github.io/?p=2688</guid>

					<description><![CDATA[MediaWiki initial config.]]></description>
										<content:encoded><![CDATA[
<p>此文系早年博客的备份，仅用于参考学习。<br>This article is an archival copy of my early years&#8217; blog posts.</p>



<h4 class="wp-block-heading">Enable File Upload Function:</h4>



<p>Edit file <code>LocalSettings.php</code> in the Mediawiki root directory, change <code>$wgEnableUploads</code> to <code>true</code>, then you&#8217;ll see that a <code>Upload File</code> link appear under <code>Toolbox</code> on the sidebar. You also have to change the properties of the default upload directory &#8220;image&#8221; to allow it to be read/write.</p>



<h4 class="wp-block-heading">Edit php.ini file:</h4>



<p>Edit your <code>php.ini</code> file to make sure the file size limit fits your needs. If you have full access to your hosting server, you can just edit it yourself, if not, you can simply ask your technical support to change it for you.</p>



<h4 class="wp-block-heading">Make Mediawiki allow more file extensions:</h4>



<p>Edit <code>includes/DefaultSettings.php</code>, add more file extensions in the array:</p>



<pre class="wp-block-code"><code>$wgFileExtensions = array( 'png', 'gif', 'jpg', 'jpeg','xls' );</code></pre>



<p>Also, change <code>$wgVerifyMimeType= false;</code> to <code>true</code>.</p>



<p></p>



<h4 class="wp-block-heading">Edit sidebar:</h4>



<p>Search for <code>mediawiki:sidebar</code> and edit it.</p>



<h4 class="wp-block-heading">Change mediawiki&#8217;s default logo:</h4>



<p>The logo&#8217;s default file path is at: <code>/skins/common/images/wiki.png</code></p>



<h4 class="wp-block-heading">Limit anonymous users&#8217; rights:</h4>



<p>Change the following configs to <code>false</code>:</p>



<pre class="wp-block-code"><code>$wgGroupPermissions&#91;'<em>']&#91;'createaccount'] = false;</em>
$wgGroupPermissions&#91;'']&#91;'edit'] = false;</code></pre>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>How to calculate your Internet connection speed and your hard drive capacity</title>
		<link>https://jameswsullivan.github.io/how-to-calculate-your-internet-connection-speed-and-your-hard-drive-capacity/</link>
		
		<dc:creator><![CDATA[James]]></dc:creator>
		<pubDate>Thu, 03 Mar 2011 23:31:00 +0000</pubDate>
				<category><![CDATA[archive]]></category>
		<category><![CDATA[DevOps]]></category>
		<category><![CDATA[System Administration]]></category>
		<guid isPermaLink="false">https://jameswsullivan.github.io/?p=2685</guid>

					<description><![CDATA[How to calculate your real internet speed and hard drive capacity.]]></description>
										<content:encoded><![CDATA[
<blockquote class="wp-block-quote">
<p>此文系早年博客的备份，仅用于参考学习。<br>This article is an archival copy of my early years&#8217; blog posts.</p>
</blockquote>



<p>I write those two issues here in the same article because they share a similarity, which is the conversion between the units used in computer system. To be specific, it is a matter of converting bit, Byte, KB, MB, GB, etc, to each other. Now let&#8217;s see the problems.</p>



<h2 class="wp-block-heading">Internet Connection Speed</h2>



<p>We often find that the connection speed of our broadband which the service provider tells us is not as fast as we think, for example, we setup a 2M ADSL broadband at home and only find that the maximum download speed is just around 250 KB/s, far less than 2MB.</p>



<p>Before I explain why, I have to say that there is a misunderstanding in this issue, that is, we just take it for granted that the &#8220;2M&#8221; here is equivalent to the &#8220;2MB (2M Byte)&#8221; which we use to describe the size of an ordinary file, such as JPG or DOC.</p>



<p>However, this is not the case here. When it comes to the speed of the broadband, &#8220;2M&#8221; actually means 2M bit/s, not 2M Byte/s. So if you know some essentials of how our computers work, you may already know that the two units are different and it needs a calculation to convert 2M Bit to Byte. Here I give you some information on this and how to calculate it right:</p>



<pre class="wp-block-code"><code>8bit = 1Byte ==> 1024Byte = 1KB ==> 1024KB = 1MB ==> 1024MB = 1GB, and so forth.</code></pre>



<p>so,</p>



<pre class="wp-block-code"><code>2M bit/s = 2,000,000 bit/s = 2,000,000/8 Byte/s = 2,000,000/(8*1024) KB/s = 244.14 KB/s</code></pre>



<p>(This calculation is just theoretically correct, but the real speed will be a little bit faster/slower than the number you calculate.)</p>



<p>So, next time you setup a broadband, you just do the calculation yourself and you&#8217;ll know how fast your broadband is.</p>



<h2 class="wp-block-heading">The real capacity of your Hard Drive</h2>



<p>Similar to the speed of your broadband, the printed capacity of your hard drive is also not the real capacity than you can actually use. The actual capacity will be a little bit less than the printed one.</p>



<p>This is because the manufacturer uses &#8220;1000&#8221; instead of &#8220;1024&#8221; to convert Byte, KB, MB, etc, to each other, which means &#8220;1KB&#8221; here is not &#8220;1024 Byte&#8221; but &#8220;1000 Byte&#8221;. However, our computers still use &#8220;1024&#8221; to calculate the capacity, so the actual capacity you can use need to be re-calculated like this (take a 320G hard drive as an example):</p>



<pre class="wp-block-code"><code>320,000,000,000 Byte = 320,000,000,000 / (1024 * 1024 * 1024) GB = 298.02 GB</code></pre>



<p>So, here you know why your actual hard drive capacity is always less than the one printed outside its cover.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>用Google App Engine部署OPM镜像</title>
		<link>https://jameswsullivan.github.io/deploy-opera-mini-server-mirror-with-google-app-engine/</link>
		
		<dc:creator><![CDATA[James]]></dc:creator>
		<pubDate>Tue, 24 Aug 2010 23:20:00 +0000</pubDate>
				<category><![CDATA[archive]]></category>
		<category><![CDATA[DevOps]]></category>
		<category><![CDATA[Google App Engine]]></category>
		<category><![CDATA[Java]]></category>
		<category><![CDATA[Proxy]]></category>
		<category><![CDATA[Software Development]]></category>
		<category><![CDATA[VPN]]></category>
		<guid isPermaLink="false">https://jameswsullivan.github.io/?p=2612</guid>

					<description><![CDATA[用Google App Engine部署OPM(Opera Mini Server Mirror)镜像用于翻墙]]></description>
										<content:encoded><![CDATA[
<blockquote class="wp-block-quote">
<p>此文系早年博客的备份，仅用于参考学习。<br>This article is an archival copy of my early years&#8217; blog posts.</p>
</blockquote>



<p>这个教程网上已经有很多了，写在这里一来为了方便大众，二来给自己当作笔记。</p>



<p>下载文后的opm压缩包和 Google App Engine SDK for Java 1.3.5 ，将二者解压至某目录。如，将解压后的java-sdk文件夹命名为sdk放在D盘根目录下，然后将解压后的opm文件夹放入<code>d:\sdk</code>。</p>



<p>用任何文本编辑器打开&nbsp; <code>opm/war/WEB-INF/appengine-web.xml</code>&nbsp; 文件，找到一行<code>your-application-id</code>把<code>your-application-id</code>改成你对应的Google App的名称，修改后保存。</p>



<p>进入命令行（运行cmd）</p>



<p>进入刚才的d:\sdk目录，再cd进入bin目录，在提示符下输入如下命令：</p>



<p><code>appcfg.cmd update d:\sdk\opm\war</code></p>



<p>其中update之后即为刚才的opm文件夹。</p>



<p>接下来会有提示输入Gmail地址和密码，注意，输入密码时屏幕上什么都不提示。</p>



<p>最后，等待上传完成，当出现下面一行提示时则上传成功：<code>Update completed successfully</code></p>



<p>上传好后测试一下，浏览</p>



<pre class="wp-block-code"><code>http:&#47;&#47;your-application-id.appspot.com/opm
http://your-application-id.appspot.com/ucweb</code></pre>



<p>如果跳到Google首页，表示成功了。</p>



<p>接下来若有需要请参照此教程修改Android版的Opera Mini的服务器地址为上面的地址（UCWeb修改方法请自行Google）。</p>



<p>这里下载opm镜像文件包：<a rel="noreferrer noopener" href="https://code.google.com/archive/p/opm-server-mirror/" target="_blank">opm-mirror</a></p>



<p>关键字：用Google app engine搭建opm服务器，用GAE搭建opera mini镜像服务器</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>修改Android版Opera Mini的服务器实现翻墙</title>
		<link>https://jameswsullivan.github.io/modify-opera-mini-android-apk-to-use-with-your-own-opm-mirror-on-gae/</link>
		
		<dc:creator><![CDATA[James]]></dc:creator>
		<pubDate>Sat, 14 Aug 2010 04:28:00 +0000</pubDate>
				<category><![CDATA[archive]]></category>
		<category><![CDATA[DevOps]]></category>
		<category><![CDATA[Java]]></category>
		<category><![CDATA[Proxy]]></category>
		<category><![CDATA[Software Development]]></category>
		<category><![CDATA[VPN]]></category>
		<guid isPermaLink="false">https://jameswsullivan.github.io/?p=2616</guid>

					<description><![CDATA[修改Android版Opera Mini的服务器以实现用自搭建的GAE OPM服务器来翻墙]]></description>
										<content:encoded><![CDATA[
<blockquote class="wp-block-quote">
<p>此文系早年博客的备份，仅用于参考学习。<br>This article is an archival copy of my early years&#8217; blog posts.</p>
</blockquote>



<h2 class="wp-block-heading">修改Android版Opera Mini 4.2:</h2>



<p>注：本文所用文本编辑器为UltraEdit。</p>



<ol>
<li>先此处下载并安装JRE：<br><code>http://www.java.com/en/download/index.jsp<br></code>如果你已经安装了<code>JRE</code>或者<code>JDK</code>，请跳过此步。</li>



<li>点击此处下载我打包的<code>opm4</code>修改包，将其解压至某目录，这里以D盘根目录为例，解压后的目录为：<code>D:\opm4</code>。</li>



<li>用文本编辑器打开<code>D:\opm4\opm\Code.smali</code>，将 <code>http://server4.operamini.com:80/</code> 和 <code>socket://server4.operamini.com:1080</code> 都改成你自己架设的OPM服务器地址，<a href="https://jameswsullivan.github.io/deploy-opera-mini-server-mirror-with-google-app-engine/">如这篇文章介绍的利用GAE搭建的Opera Mini服务器地址</a>。修改后保存。（用UltraEdit编辑的话，保存后删除自动生成的bak文件，否则一会儿影响编译）</li>



<li>打开命令行<code>cmd</code>，进入<code>D:\opm4</code>，执行如下命令：<code>java -jar smali.jar -o D:\opm4\classes.dex D:\opm4\opm</code>（此行命令的意思是将<code>opm</code>文件夹打包成<code>classes.dex</code>文件）</li>
</ol>



<ol start="5">
<li>到此处下载Android版OPM的安装包：<br><code>http://opm-server-mirror.googlecode.com/files/opm4.apk<br></code>下载后放入<code>opm4</code>文件夹。</li>



<li>将<code>opm4.apk</code>改名为<code>opm4.zip</code>，用任意压缩工具打开（是打开，不是解包），删除里面的<code>META-INF</code>文件夹，并把刚刚生成好的 <code>D:\opm4\classes.dex</code> 拖进<code>opm4.zip</code>替换掉原始的<code>classes.dex</code>。</li>



<li>把修改过的<code>opm4.zip</code>放入修改包中的<code>Auto-Sign</code>的目录下，运行里面的<code>sign.bat</code>。</li>



<li>如果你在<code>Auto-Sign</code>的目录里面看见<code>your_app_signed.apk</code>的话，则证明已经修改工作已经完成了。在手机中安装前记得卸载先前的版本。</li>



<li>若修改包中有文件出现异样，请到如下网址下载：<br>下载smali： <code>http://smali.googlecode.com/files/smali.jar</code><br>下载反编译过的的Android版OPM源代码： <code>http://opm-server-mirror.googlecode.com/files/android_opera_classes.zip</code></li>
</ol>



<h2 class="wp-block-heading">修改Android版Opera mini 5.1：</h2>



<ol>
<li>点击这里下载修改包，解压至某目录，这里以<code>D:\opm5</code>为例。</li>



<li>打开命令行<code>cmd</code>，进入<code>D:\opm5</code>，执行<code>apktool d opera-mini-51.apk opm</code>（此命令意思是将你的<code>apk</code>文件解包到<code>opm</code>目录下，<code>apk</code>文件名和<code>opm</code>目录名是随意的）</li>
</ol>



<ol start="3">
<li>用文本编辑工具修改修改 <code>opm\smali\f.smali</code> 中的<br><code>http://mini5.opera-mini.net:80/<br>socket://mini5.opera-mini.net:1080</code></li>



<li>为自己搭建的Opera mini服务器地址，比如这里所示的用GAE搭建的镜像服务器。修改后保存。若用UltraEdit编辑，同样请删掉生成的<code>bak</code>文件。再在同目录下运行：<code>apktool b opm opm51.apk</code>（此命令意思是将<code>opm</code>文件夹打包成<code>opm51.apk</code>文件，同样，目录名和文件名可以随意）</li>
</ol>



<ol start="5">
<li>将得到的<code>opm51.apk</code>重命名为<code>opm51.zip</code>，并拖放到<code>Auto-Sign</code>文件夹内，运行<code>sign.bat</code>来签名，得到<code>your_app_signed.apk</code>，即可以拷入手机安装了。</li>
</ol>



<p></p>



<p>关键字：自定义Android版opera mini服务器，android版opera mini翻墙，自定义安卓版opera mini服务器，安卓版opera mini翻墙</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>在HTC G3 Hero上配置OpenVPN</title>
		<link>https://jameswsullivan.github.io/configure-openvpn-on-htc-g3-hero/</link>
		
		<dc:creator><![CDATA[James]]></dc:creator>
		<pubDate>Mon, 02 Aug 2010 19:44:00 +0000</pubDate>
				<category><![CDATA[archive]]></category>
		<category><![CDATA[Android]]></category>
		<category><![CDATA[DevOps]]></category>
		<category><![CDATA[Linux]]></category>
		<category><![CDATA[OpenVPN]]></category>
		<category><![CDATA[Proxy]]></category>
		<category><![CDATA[Software Development]]></category>
		<category><![CDATA[System Administration]]></category>
		<category><![CDATA[VPN]]></category>
		<guid isPermaLink="false">https://jameswsullivan.github.io/?p=2651</guid>

					<description><![CDATA[在HTC G3 Hero工程样机上配置OpenVPN。]]></description>
										<content:encoded><![CDATA[
<blockquote class="wp-block-quote">
<p>此文系早年博客的备份，仅用于参考学习。<br>This article is an archival copy of my early years&#8217; blog posts.</p>
</blockquote>



<p>前阵子从<a href="http://shop62214290.taobao.com/?asker=wangwang">小毛球</a>手里买到了一个HTC G3 Hero的工程样机，此机器与<a href="http://detail.zol.com.cn/191/190896/param.shtml">零售版的Hero</a>略有不同，它没有轨迹球，ROM和RAM的容量也比零售版要小，并且只支持Android1.5版的ROM，俗称“5键版”（还有一种工程机为3键版）。</p>



<p>好了，回归正题。我的设备，只要是能联网的，都免不了要为其添加翻墙的功能。起初在网上看到很多朋友是下载了各种必须的文件之后，通过命令行一步步 手动执行的，可是我执行了多次都没能奏效，可能是手机系统的个体差异，再加上我对Android命令行操作也不太了解，所以最总没有成功。后来搜到一个可 以直接通过软件安装的方法，再借助<a href="http://forum.xda-developers.com/">xda-developers</a>论坛和<a href="http://code.google.com/p/android-openvpn-installer/">android-openvpn-installer</a>项目里外国大牛们的指点，最后成功解决，下面是详细的步骤：</p>



<ul>
<li>我的ROM版本是：3.2-update-hero-modacocustomrom-core-signed.zip （1.5固件）</li>



<li>Recovery 版本是： Recovery-RA-hero-v1.6.2-blue</li>
</ul>



<p>1 &#8211; 你需要有一个Google账户，用来登录Android Market。</p>



<p>2 &#8211; 在Market里面搜索<code>OpenVPN</code>，找到<code>OpenVPN Installer</code>和<code>OpenVPN Settings</code>，安装之（最好是用WiFi来装，快，省流量）。</p>



<p>3 &#8211; 安装完毕后，运行<code>OpenVPN Installer</code>，在第一个画面选择Install ，路径选择<code>/system/bin/</code>，下一个弹出界面，路径选择<code>/system/xbin/bb</code>。</p>



<p>4 &#8211; 将手机用USB连接电脑（G3 Hero用USB连接如果出现问题，通常插上USB线再重启即可，若还有其它问题，请自行Google解决），打开提示栏，选择“装载”。</p>



<p>5 &#8211; 在SD卡根目录创建<code>openvpn</code>文件夹，拷入<code>OpenVPN</code>的四个必须的文件（通常收费的VPN会有两个<code>.crt</code>，一个<code>.key</code>，一个<code>.ovpn</code>）。</p>



<p>6 &#8211; 若你的电脑上还没有Android SDK，<s>下载下面的压缩包</s>，将<code>adb.exe</code>和<code>AdbWinApi.dll</code>放入<code>c:\Windows\system32\</code>下，然后用<code>Win+R</code>组合键打开运行<code>cmd</code>打开命令行，便可执行下述命令。</p>



<p>7 &#8211; 下述命令比较重要，与网上多数版本命令略有不同，请根据自己的情况仔细输入：</p>



<pre class="wp-block-code"><code>确保手机连接正常，并且最好不处于“装载”状态，输入（注意空格）

adb remount
adb shell mkdir /system/xbin/bb
adb shell ln -s /system/xbin/ifconfig /system/xbin/bb/ifconfig
adb shell ln -s /system/xbin/route /system/xbin/bb/route</code></pre>



<p>8 &#8211; 然后，运行 adb shell 命令，在 # 提示符下，输入cd /sdcard/openvpn/进入SD卡中存有OpenVPN文件的目录，再执行openvpn –config xxxx.ovpn以测试连接是否成功。此过程必须保证你的手机联网正常（我测试过WiFi，GPRS和3G我没测试，但应该好用），其中xxxx为你的.ovpn文件名。</p>



<p>如果最终出现<code>Initialization Sequence Completed</code>则表明连接成功，以后的操作即可直接在OpenVPN Settings中连接了。</p>



<p>9 &#8211; 如果出现错误<code>Linux ifconfig failed: could not execute external program</code>，在其他步骤都执行正确的情况下，通常是ifconfig和route的路径问题，请参照第7步自行修改。当然，ifconfig的路径可以通过命令which来查看，我的路径如下：</p>



<pre class="wp-block-code"><code>D:\android&gt;adb shell
# which ifconfig
which ifconfig
/system/xbin/ifconfig
#</code></pre>



<p>所以第7步所对应的路径便如上所示。我不知道是不是在所有的Android手机中路径都如此，大家在使用的时候根据自己的情况更改第7步中后两个命令的第一个路径即可，第二个路径<code>/system/xbin/bb/ifconfig</code>和<code>/system/xbin/bb/route</code>）应该都是相同的，因为<code>OpenVPN Installer</code>就是这么安装的。</p>



<p>10 &#8211; 最后，再说说<code>OpenVPN Settings</code>。如果初次运行<code>OpenVPN Settings</code>时在主界面看不到你的<code>.ovpn</code>文件名，一般重启后即可解决。另外，如果有连接不上的问题，可能属于DNS污染，需要做如下操作：<br><code>MENU键 –&nbsp; Fix DNS &nbsp;–&nbsp; Reset DNS</code>，等一会儿，如果弹出需要root权限则点击Allow，完成后它会自动将DNS设置为8.8.8.8，再次打开Fix DNS即可看见Current DNS已经被修改。最后，相继勾选OpenVPN和你的.ovpn文件名，等待一会儿之后应该就会提示链接成功了，在你的<code>.ovpn</code>下面显示<code>connected to xx.xx.xx.xx as xx.xx.xx.xx</code>。<br>&nbsp;<br>补充：要想成功配置OpenVPN，还跟一个名叫<code>tun.ko</code>的底层驱动有关，我之前刷的一个ROM需要手动安装驱动，而这个驱动似乎又有版本之 分，或者跟ROM的版本相关，我弄不太明白，也没弄成功。另外还需要安装<code>busybox</code>，我起初也弄得不明不白，当然，还有手机取得ROOT权限等等琐碎的问题。所以我推荐大家如果希望避免后期的麻烦，在前期刷ROM的阶段，不妨参照下ROM发布者提供的reference，找一个已经安装好<code>tun.ko</code>和<code>busybox</code>的ROM，并且参照论坛里的刷机和ROOT教程，将自己的手机配置好，这样能给后期的操作省很多力气。</p>



<p>注：由于我自己的工程机只能支持1.5的ROM版本，其它版本我也无从测试，所以使用其他版本的系统的朋友请自行“随机应变”。若在操作过程中遇到什么问题，或者我有哪一步写的有问题，欢迎留言讨论。以下是操作过程中可能用到的文件打包：<br><s>工具包：HTC-Hero-Package<br>ROM:&nbsp; Modaco 3.2</s><br>&nbsp;<br>参考资料：<br>中文：<br>http://14551.org/2010/05/g3-connect-to-openvpn.html<br>http://www.hiapk.com/bbs/thread-214667-1-1.html<br>http://bbs.gfan.com/android-39617-1-1.html<br>http://www.xinlogs.com/HTC-Hero-Openvpn/<br>英文：<br>http://code.google.com/p/android-openvpn-installer/issues/detail?id=2<br>http://forum.xda-developers.com/showpost.php?p=7132889&amp;postcount=56<br>&nbsp;<br>关键字：Android手机配置OpenVPN，HTC手机安装OpenVPN，HTC G3 Hero安装OpenVPN</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>iTouch使用OpenVpn方法</title>
		<link>https://jameswsullivan.github.io/configure-itouch-to-use-openvpn/</link>
		
		<dc:creator><![CDATA[James]]></dc:creator>
		<pubDate>Thu, 17 Jun 2010 21:22:00 +0000</pubDate>
				<category><![CDATA[archive]]></category>
		<category><![CDATA[DevOps]]></category>
		<category><![CDATA[Linux]]></category>
		<category><![CDATA[OpenVPN]]></category>
		<category><![CDATA[Proxy]]></category>
		<category><![CDATA[Software Development]]></category>
		<category><![CDATA[System Administration]]></category>
		<category><![CDATA[VPN]]></category>
		<guid isPermaLink="false">https://jameswsullivan.github.io/?p=2632</guid>

					<description><![CDATA[iPod Touch上使用OpenVPN翻墙。]]></description>
										<content:encoded><![CDATA[
<blockquote class="wp-block-quote">
<p>此文系早年博客的备份，仅用于参考学习。<br>This article is an archival copy of my early years&#8217; blog posts.</p>
</blockquote>



<p>本人购置iPod Touch 3rd Generation已经有一段时间了，由于一直没什么时间折腾，所以破解后一系列强大的功能都没有时间来一一实现。然而，由于伟大的GFW的存在，使得iTouch的很多我能用到的正常功能无法正常工作，于是抽出一天下午来完成了iTouch上OpenVPN的配置，期间调试、安装有不少波折，在这里记录下来，方便日后自己和他人使用。</p>



<h2 class="wp-block-heading">前期准备：</h2>



<ol>
<li>破解iTouch，什么版本的破解都可以，确保能访问Cydia。我的是Spirit破解，iTouch版本三代3.1.3。</li>



<li>在电脑上安装WinSCP，PuTTY。<br>前者是为了从电脑上往iTouch上传文件，后者是命令行程序。有关WinSCP的安装和与iTouch的连接，方法网上一搜一大片，我只简单说一下：安装WinSCP，到iTouch上查看其ip地址，然后在WinSCP的session里以 <code>用户名/密码</code> 为 <code>root/alpine</code> 来登录iTouch。PuTTY则可以直接在WinSCP的<code>Commands</code>里调用。另外，网上文章说用WinSCP连接iTouch需要安装<code>BSD Subsystem</code>，但是我在Cydia里没找到，iTouch上也没有默认安装，可依旧能够正常连接。</li>



<li>准备好OpenVPN的相关文件，收费的免费的都可以。我的文件是<code>ca.crt, client.crt, client.key, XXXX.ovpn</code>。</li>



<li>一个临时的免费或收费VPN，可以直接在iTouch上设置并使用的。这个环节我是用到了，但是不一定所有人都要用到，因为我这里不知为何访问Cydia时十分卡，还有<code>host unreachable</code>的问题，好多必要的工具软件无法正常下载安装，连上VPN之后得以解决，所以我想本身使用Cydia正常的人应该可以略去此步。</li>
</ol>



<p>至于好用的免费VPN，现在比较难找，因为天朝为了牠的和谐和稳定，屏蔽了很多VPN服务。我这里低调推荐一个：macrovpn.com。它提供7天2G的免费VPN服务，对于我们折腾iTouch是足够用了。注册的过程我不赘述，在iTouch上设置方法如下:</p>



<pre class="wp-block-code"><code>Settings -- General -- Network -- VPN -- Add VPN Configuration -- PPTP
Description -- 随便填写
Server -- 目前似乎只有fr1.macrovpn.com是可用的
Account -- 注册的用户名
Password -- 密码</code></pre>



<h2 class="wp-block-heading">设置步骤：</h2>



<ol>
<li>连接找到的免费VPN，在Cydia里搜索并安装<code>OpenSSL, OpenSSH, SBSettings, OpenVPN Toggle for SBSettings</code>。</li>



<li>准备好OpenVPN的文件，将展名为<code>.ovpn</code>的文件命名为：<code>conf.ovpn</code>，然后用任意文本编辑器打开<code>conf.ovpn</code>，确认 <code>ca ca.crt, key client.key, cert client.crt</code> 三行中 <code>ca, key, cert</code> 后面对应的文件名与你的文件名相符。<br>注意：若在后面的命令行操作中，提示说<code>“Cannot load certificate file”</code>，则在此步骤需将上述三行后面的文件名更改为绝对路径，如下：<br><code>ca /var/mobile/Library/OpenVpn/ca.crt<br>key /var/mobile/Library/OpenVpn/client.key<br>cert /var/mobile/Library/OpenVpn/client.crt</code></li>



<li>用WinSCP将准备好的OpenVPN文件传入iTouch的 <code>/var/mobile/Library/OpenVPN/</code> 目录下。并在WinSCP里将OpenVPN的属性中，<code>“组”和“所有者”（"Group"与"Owner"）</code>设置为<code>mobile</code>。</li>



<li>打开 <code>/var/mobile/Library/SBSettings/Commands/com.offinf.openvpnup</code> 并将内容编辑为：</li>
</ol>



<pre class="wp-block-code"><code>!/bin/sh
/bin/rm /var/mobile/Library/SBSettings/Toggles/OpenVpn/OFF
cd /var/mobile/Library/OpenVpn/
/usr/bin/openvpn-iphone --script-security 2 --config /var/mobile/Library/OpenVpn/conf.ovpn &amp;</code></pre>



<p><s>可以直接在此下载我编辑好的该文件：</s></p>



<ol start="5">
<li>打开PuTTY，以用户名root，密码alpine登录。在命令行输入：<code>cd /var/mobile/Library/OpenVPN/</code><br>转到OpenVPN文件夹。</li>
</ol>



<pre class="wp-block-code"><code>如果你的.key文件中有密码，则输入：
cp my.key my.key.orig
openssl rsa -in my.key.orig -out my.key
其中“my”换成你的密匙文件名</code></pre>



<p>键入以下命令测试可否正常连接：<code>openvpn-iphone --script-security 2 --config conf.ovpn</code></p>



<p>如果经过一系列连接操作后提示：<code>Initialization Sequence Completed</code>，则连接成功，若连接不成功，请检查上述步骤是否有漏洞，或者重启iTouch后再试。</p>



<ol start="6">
<li>完成上述操作后，重启iTouch，在屏幕最上方状态栏上划一下，出现设置Toggle的界面，点击More，将OpenVPN设置为On，然后回到主界面后，在Toggle界面里点击该按钮，等一会儿之后，就可以实现翻墙了。</li>



<li>也有人说直接在iTouch上安装<code>mobileterminal</code>来完成上述命令行的操作，但是很不幸，我用<code>mobileterminal</code>键入测试命令后OpenVPN无法连接成功，不知为何。</li>
</ol>



<p>我的这篇文章省略了网上其他文章里冗长的说明，我想对于一般玩家，不需要知道这些东西都是啥，知道怎么用就行了，所以我只罗列了步骤，如果有人发现当中的错误或遇到某种问题，欢迎留言或联系我。</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>用自己的Google账户自建Twitter代理</title>
		<link>https://jameswsullivan.github.io/deploy-twitter-proxy-using-google-app-engine/</link>
		
		<dc:creator><![CDATA[James]]></dc:creator>
		<pubDate>Thu, 26 Nov 2009 17:49:00 +0000</pubDate>
				<category><![CDATA[archive]]></category>
		<category><![CDATA[DevOps]]></category>
		<category><![CDATA[Google App Engine]]></category>
		<category><![CDATA[Proxy]]></category>
		<category><![CDATA[Python]]></category>
		<category><![CDATA[Software Development]]></category>
		<category><![CDATA[System Administration]]></category>
		<category><![CDATA[Twitter]]></category>
		<category><![CDATA[Windows Systems Administration]]></category>
		<guid isPermaLink="false">https://jameswsullivan.github.io/?p=2629</guid>

					<description><![CDATA[用自己的Google账户(Google App Engine)自建Twitter代理]]></description>
										<content:encoded><![CDATA[
<blockquote class="wp-block-quote">
<p>此文系早年博客的备份，仅用于参考学习。<br>This article is an archival copy of my early years&#8217; blog posts.</p>
</blockquote>



<p><strong>为了达到让菜鸟也能按步骤完成搭建的目的，本文只尽可能简便的罗列步骤：</strong></p>



<ol>
<li>首先，你需要有一个Google账户，如果没有，<s>请到这里注册</s>。</li>



<li><s>访问这里</s>，点击右边侧栏的“使用入门”中的“注册”。</li>



<li>在接下来的界面中，用刚刚的Google账户登录。从这一界面开始下面将会是英文。</li>



<li>点击Create an Application。</li>



<li>下一步将会进行短信验证。<code>Country and Carrier</code>选择<code>Other</code>，<code>Mobile Number</code>填写你的手机号，注意前面加 <code>+86</code> ，例如，<code>+8613501234567</code>。注意，这里每一个手机号码只能验证一个账户，收到验证码后在下一个画面填入。</li>



<li>接着来到<code>Create an Application</code>页面，在<code>Application Identifier</code>填入你想要的程序名称，以后你访问该程序的地址就是: <code>your-identifier.appspot.com</code>。<code>Application Title</code>可以随喜好填写。选中<code>I accept these terms</code>，然后<code>Save</code>。</li>



<li>下一个页面会显示<code>Application Registered Successfully</code>。</li>



<li><s>点击这里下载</s>BirdNest，这是一个网友已经打包好的版本，原地址请访问：<s>http://cid-b25292e8d4856480.skydrive.live.com/self.aspx/.Public/gae.zip</s>。下载后解压，默认解压为<code>gae</code>目录，进入目录，用任何文本编辑工具打开<code>app.yaml</code>文件（推荐使用写字板），将第一行<code>application:nest</code>中的<code>nest</code>改为上文中你注册的<code>your-identifier</code>。</li>



<li>下载以下这两个工具，并安装：<br><code>Google App Engine：http://code.google.com/intl/zh-CN/appengine/downloads.html</code>，下载<code>Windows</code>平台的<code>GoogleAppEngine_1.2.7.msi</code>。<br><code>Python：http://www.python.org/download/releases/2.5.4/</code>，如果该地址无法访问，请直接在本站下载：（本站只提供x86版本的下载，如果你需要别的版本，请自行到上述地址下载）</li>



<li>安装完成后，到开始菜单里运行<code>Google App Engine Launcher</code>。初次运行它可能会出现警告界面，提示找不到<code>Python</code>，不要紧，点击<code>OK</code>，然后选择<code> Edit - Preferences</code>，在其中<code>Python Path</code>里，选择你所安装的<code>Python</code>路径，通常情况下默认为<code>C:\Python25\python.exe</code>。设置完成后下次运行就不会再提示了。</li>



<li>选择<code>File - Add Existing Application</code>，然后选择你刚才解压后的<code>gae</code>目录，点击<code>add</code>。然后你的窗口中会得到一个<code>name</code>为<code>your-identifier</code>，端口为<code>8080</code>的<code>App</code>。选中该<code>App</code>，点击工具栏上的<code>Deploy</code>，在弹出的对话框中填入你的<code>Gmail</code>地址和密码，点击<code>OK</code>后会出现一个<code>DOS</code>窗口，等待一小段时间，上传成功后会出现一个提示窗口，如果最后一行写着：<code>Process exited with code 0</code>，则证明你的<code>App</code>上传无误可以正确使用。如果提示不是<code>code 0</code>，则说明你的某处操作有误，请参照上文改正。</li>



<li>最后，访问<code>your-identifier.appspot.com/api/</code>，即出现Twitter首页。</li>
</ol>



<p><strong>下面是如何通过twhirl使用自己搭建的API来访问Twitter：</strong></p>



<ol>
<li><code>Twhirl</code>需要<code>adobe air</code>支持，请先下载安装<code>adobe air:http://get.adobe.com/air/</code>，然后到这里下载<code>twhirl：http://www.twhirl.org/download</code></li>



<li>安装好<code>Twhirl</code>后，在它的<code>Accounts</code>界面，左下角的菜单里选择<code>laconi.ca</code>,在旁边的输入框中填写：<code>your-twitter-id@your-identifier.appspot.com</code>,<code>your-twitter-id</code>是你的twitter用户名，<code>@</code>之后则是你的<code>Google App</code>地址。然后在上面的方框中就会出现你的帐户名，选择它，点击右边的<code>Connect</code>，输入密码即可使用了。</li>
</ol>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
