<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>archive &#8211; howdy</title>
	<atom:link href="https://jameswsullivan.github.io/category/archive/feed/" rel="self" type="application/rss+xml" />
	<link>https://jameswsullivan.github.io/</link>
	<description></description>
	<lastBuildDate>Wed, 05 Jul 2023 00:43:30 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.2.2</generator>
	<item>
		<title>用Google App Engine部署OPM镜像</title>
		<link>https://jameswsullivan.github.io/deploy-opera-mini-server-mirror-with-google-app-engine/</link>
		
		<dc:creator><![CDATA[James]]></dc:creator>
		<pubDate>Tue, 24 Aug 2010 23:20:00 +0000</pubDate>
				<category><![CDATA[archive]]></category>
		<category><![CDATA[DevOps]]></category>
		<category><![CDATA[Google App Engine]]></category>
		<category><![CDATA[Java]]></category>
		<category><![CDATA[Proxy]]></category>
		<category><![CDATA[Software Development]]></category>
		<category><![CDATA[VPN]]></category>
		<guid isPermaLink="false">https://jameswsullivan.github.io/?p=2612</guid>

					<description><![CDATA[用Google App Engine部署OPM(Opera Mini Server Mirror)镜像用于翻墙]]></description>
										<content:encoded><![CDATA[
<blockquote class="wp-block-quote">
<p>此文系早年博客的备份，仅用于参考学习。<br>This article is an archival copy of my early years&#8217; blog posts.</p>
</blockquote>



<p>这个教程网上已经有很多了，写在这里一来为了方便大众，二来给自己当作笔记。</p>



<p>下载文后的opm压缩包和 Google App Engine SDK for Java 1.3.5 ，将二者解压至某目录。如，将解压后的java-sdk文件夹命名为sdk放在D盘根目录下，然后将解压后的opm文件夹放入<code>d:\sdk</code>。</p>



<p>用任何文本编辑器打开&nbsp; <code>opm/war/WEB-INF/appengine-web.xml</code>&nbsp; 文件，找到一行<code>your-application-id</code>把<code>your-application-id</code>改成你对应的Google App的名称，修改后保存。</p>



<p>进入命令行（运行cmd）</p>



<p>进入刚才的d:\sdk目录，再cd进入bin目录，在提示符下输入如下命令：</p>



<p><code>appcfg.cmd update d:\sdk\opm\war</code></p>



<p>其中update之后即为刚才的opm文件夹。</p>



<p>接下来会有提示输入Gmail地址和密码，注意，输入密码时屏幕上什么都不提示。</p>



<p>最后，等待上传完成，当出现下面一行提示时则上传成功：<code>Update completed successfully</code></p>



<p>上传好后测试一下，浏览</p>



<pre class="wp-block-code"><code>http:&#47;&#47;your-application-id.appspot.com/opm
http://your-application-id.appspot.com/ucweb</code></pre>



<p>如果跳到Google首页，表示成功了。</p>



<p>接下来若有需要请参照此教程修改Android版的Opera Mini的服务器地址为上面的地址（UCWeb修改方法请自行Google）。</p>



<p>这里下载opm镜像文件包：<a rel="noreferrer noopener" href="https://code.google.com/archive/p/opm-server-mirror/" target="_blank">opm-mirror</a></p>



<p>关键字：用Google app engine搭建opm服务器，用GAE搭建opera mini镜像服务器</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>修改Android版Opera Mini的服务器实现翻墙</title>
		<link>https://jameswsullivan.github.io/modify-opera-mini-android-apk-to-use-with-your-own-opm-mirror-on-gae/</link>
		
		<dc:creator><![CDATA[James]]></dc:creator>
		<pubDate>Sat, 14 Aug 2010 04:28:00 +0000</pubDate>
				<category><![CDATA[archive]]></category>
		<category><![CDATA[DevOps]]></category>
		<category><![CDATA[Java]]></category>
		<category><![CDATA[Proxy]]></category>
		<category><![CDATA[Software Development]]></category>
		<category><![CDATA[VPN]]></category>
		<guid isPermaLink="false">https://jameswsullivan.github.io/?p=2616</guid>

					<description><![CDATA[修改Android版Opera Mini的服务器以实现用自搭建的GAE OPM服务器来翻墙]]></description>
										<content:encoded><![CDATA[
<blockquote class="wp-block-quote">
<p>此文系早年博客的备份，仅用于参考学习。<br>This article is an archival copy of my early years&#8217; blog posts.</p>
</blockquote>



<h2 class="wp-block-heading">修改Android版Opera Mini 4.2:</h2>



<p>注：本文所用文本编辑器为UltraEdit。</p>



<ol>
<li>先此处下载并安装JRE：<br><code>http://www.java.com/en/download/index.jsp<br></code>如果你已经安装了<code>JRE</code>或者<code>JDK</code>，请跳过此步。</li>



<li>点击此处下载我打包的<code>opm4</code>修改包，将其解压至某目录，这里以D盘根目录为例，解压后的目录为：<code>D:\opm4</code>。</li>



<li>用文本编辑器打开<code>D:\opm4\opm\Code.smali</code>，将 <code>http://server4.operamini.com:80/</code> 和 <code>socket://server4.operamini.com:1080</code> 都改成你自己架设的OPM服务器地址，<a href="https://jameswsullivan.github.io/deploy-opera-mini-server-mirror-with-google-app-engine/">如这篇文章介绍的利用GAE搭建的Opera Mini服务器地址</a>。修改后保存。（用UltraEdit编辑的话，保存后删除自动生成的bak文件，否则一会儿影响编译）</li>



<li>打开命令行<code>cmd</code>，进入<code>D:\opm4</code>，执行如下命令：<code>java -jar smali.jar -o D:\opm4\classes.dex D:\opm4\opm</code>（此行命令的意思是将<code>opm</code>文件夹打包成<code>classes.dex</code>文件）</li>
</ol>



<ol start="5">
<li>到此处下载Android版OPM的安装包：<br><code>http://opm-server-mirror.googlecode.com/files/opm4.apk<br></code>下载后放入<code>opm4</code>文件夹。</li>



<li>将<code>opm4.apk</code>改名为<code>opm4.zip</code>，用任意压缩工具打开（是打开，不是解包），删除里面的<code>META-INF</code>文件夹，并把刚刚生成好的 <code>D:\opm4\classes.dex</code> 拖进<code>opm4.zip</code>替换掉原始的<code>classes.dex</code>。</li>



<li>把修改过的<code>opm4.zip</code>放入修改包中的<code>Auto-Sign</code>的目录下，运行里面的<code>sign.bat</code>。</li>



<li>如果你在<code>Auto-Sign</code>的目录里面看见<code>your_app_signed.apk</code>的话，则证明已经修改工作已经完成了。在手机中安装前记得卸载先前的版本。</li>



<li>若修改包中有文件出现异样，请到如下网址下载：<br>下载smali： <code>http://smali.googlecode.com/files/smali.jar</code><br>下载反编译过的的Android版OPM源代码： <code>http://opm-server-mirror.googlecode.com/files/android_opera_classes.zip</code></li>
</ol>



<h2 class="wp-block-heading">修改Android版Opera mini 5.1：</h2>



<ol>
<li>点击这里下载修改包，解压至某目录，这里以<code>D:\opm5</code>为例。</li>



<li>打开命令行<code>cmd</code>，进入<code>D:\opm5</code>，执行<code>apktool d opera-mini-51.apk opm</code>（此命令意思是将你的<code>apk</code>文件解包到<code>opm</code>目录下，<code>apk</code>文件名和<code>opm</code>目录名是随意的）</li>
</ol>



<ol start="3">
<li>用文本编辑工具修改修改 <code>opm\smali\f.smali</code> 中的<br><code>http://mini5.opera-mini.net:80/<br>socket://mini5.opera-mini.net:1080</code></li>



<li>为自己搭建的Opera mini服务器地址，比如这里所示的用GAE搭建的镜像服务器。修改后保存。若用UltraEdit编辑，同样请删掉生成的<code>bak</code>文件。再在同目录下运行：<code>apktool b opm opm51.apk</code>（此命令意思是将<code>opm</code>文件夹打包成<code>opm51.apk</code>文件，同样，目录名和文件名可以随意）</li>
</ol>



<ol start="5">
<li>将得到的<code>opm51.apk</code>重命名为<code>opm51.zip</code>，并拖放到<code>Auto-Sign</code>文件夹内，运行<code>sign.bat</code>来签名，得到<code>your_app_signed.apk</code>，即可以拷入手机安装了。</li>
</ol>



<p></p>



<p>关键字：自定义Android版opera mini服务器，android版opera mini翻墙，自定义安卓版opera mini服务器，安卓版opera mini翻墙</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>iTouch使用OpenVpn方法</title>
		<link>https://jameswsullivan.github.io/configure-itouch-to-use-openvpn/</link>
		
		<dc:creator><![CDATA[James]]></dc:creator>
		<pubDate>Thu, 17 Jun 2010 21:22:00 +0000</pubDate>
				<category><![CDATA[archive]]></category>
		<category><![CDATA[DevOps]]></category>
		<category><![CDATA[Linux]]></category>
		<category><![CDATA[OpenVPN]]></category>
		<category><![CDATA[Proxy]]></category>
		<category><![CDATA[Software Development]]></category>
		<category><![CDATA[System Administration]]></category>
		<category><![CDATA[VPN]]></category>
		<guid isPermaLink="false">https://jameswsullivan.github.io/?p=2632</guid>

					<description><![CDATA[iPod Touch上使用OpenVPN翻墙。]]></description>
										<content:encoded><![CDATA[
<blockquote class="wp-block-quote">
<p>此文系早年博客的备份，仅用于参考学习。<br>This article is an archival copy of my early years&#8217; blog posts.</p>
</blockquote>



<p>本人购置iPod Touch 3rd Generation已经有一段时间了，由于一直没什么时间折腾，所以破解后一系列强大的功能都没有时间来一一实现。然而，由于伟大的GFW的存在，使得iTouch的很多我能用到的正常功能无法正常工作，于是抽出一天下午来完成了iTouch上OpenVPN的配置，期间调试、安装有不少波折，在这里记录下来，方便日后自己和他人使用。</p>



<h2 class="wp-block-heading">前期准备：</h2>



<ol>
<li>破解iTouch，什么版本的破解都可以，确保能访问Cydia。我的是Spirit破解，iTouch版本三代3.1.3。</li>



<li>在电脑上安装WinSCP，PuTTY。<br>前者是为了从电脑上往iTouch上传文件，后者是命令行程序。有关WinSCP的安装和与iTouch的连接，方法网上一搜一大片，我只简单说一下：安装WinSCP，到iTouch上查看其ip地址，然后在WinSCP的session里以 <code>用户名/密码</code> 为 <code>root/alpine</code> 来登录iTouch。PuTTY则可以直接在WinSCP的<code>Commands</code>里调用。另外，网上文章说用WinSCP连接iTouch需要安装<code>BSD Subsystem</code>，但是我在Cydia里没找到，iTouch上也没有默认安装，可依旧能够正常连接。</li>



<li>准备好OpenVPN的相关文件，收费的免费的都可以。我的文件是<code>ca.crt, client.crt, client.key, XXXX.ovpn</code>。</li>



<li>一个临时的免费或收费VPN，可以直接在iTouch上设置并使用的。这个环节我是用到了，但是不一定所有人都要用到，因为我这里不知为何访问Cydia时十分卡，还有<code>host unreachable</code>的问题，好多必要的工具软件无法正常下载安装，连上VPN之后得以解决，所以我想本身使用Cydia正常的人应该可以略去此步。</li>
</ol>



<p>至于好用的免费VPN，现在比较难找，因为天朝为了牠的和谐和稳定，屏蔽了很多VPN服务。我这里低调推荐一个：macrovpn.com。它提供7天2G的免费VPN服务，对于我们折腾iTouch是足够用了。注册的过程我不赘述，在iTouch上设置方法如下:</p>



<pre class="wp-block-code"><code>Settings -- General -- Network -- VPN -- Add VPN Configuration -- PPTP
Description -- 随便填写
Server -- 目前似乎只有fr1.macrovpn.com是可用的
Account -- 注册的用户名
Password -- 密码</code></pre>



<h2 class="wp-block-heading">设置步骤：</h2>



<ol>
<li>连接找到的免费VPN，在Cydia里搜索并安装<code>OpenSSL, OpenSSH, SBSettings, OpenVPN Toggle for SBSettings</code>。</li>



<li>准备好OpenVPN的文件，将展名为<code>.ovpn</code>的文件命名为：<code>conf.ovpn</code>，然后用任意文本编辑器打开<code>conf.ovpn</code>，确认 <code>ca ca.crt, key client.key, cert client.crt</code> 三行中 <code>ca, key, cert</code> 后面对应的文件名与你的文件名相符。<br>注意：若在后面的命令行操作中，提示说<code>“Cannot load certificate file”</code>，则在此步骤需将上述三行后面的文件名更改为绝对路径，如下：<br><code>ca /var/mobile/Library/OpenVpn/ca.crt<br>key /var/mobile/Library/OpenVpn/client.key<br>cert /var/mobile/Library/OpenVpn/client.crt</code></li>



<li>用WinSCP将准备好的OpenVPN文件传入iTouch的 <code>/var/mobile/Library/OpenVPN/</code> 目录下。并在WinSCP里将OpenVPN的属性中，<code>“组”和“所有者”（"Group"与"Owner"）</code>设置为<code>mobile</code>。</li>



<li>打开 <code>/var/mobile/Library/SBSettings/Commands/com.offinf.openvpnup</code> 并将内容编辑为：</li>
</ol>



<pre class="wp-block-code"><code>!/bin/sh
/bin/rm /var/mobile/Library/SBSettings/Toggles/OpenVpn/OFF
cd /var/mobile/Library/OpenVpn/
/usr/bin/openvpn-iphone --script-security 2 --config /var/mobile/Library/OpenVpn/conf.ovpn &amp;</code></pre>



<p><s>可以直接在此下载我编辑好的该文件：</s></p>



<ol start="5">
<li>打开PuTTY，以用户名root，密码alpine登录。在命令行输入：<code>cd /var/mobile/Library/OpenVPN/</code><br>转到OpenVPN文件夹。</li>
</ol>



<pre class="wp-block-code"><code>如果你的.key文件中有密码，则输入：
cp my.key my.key.orig
openssl rsa -in my.key.orig -out my.key
其中“my”换成你的密匙文件名</code></pre>



<p>键入以下命令测试可否正常连接：<code>openvpn-iphone --script-security 2 --config conf.ovpn</code></p>



<p>如果经过一系列连接操作后提示：<code>Initialization Sequence Completed</code>，则连接成功，若连接不成功，请检查上述步骤是否有漏洞，或者重启iTouch后再试。</p>



<ol start="6">
<li>完成上述操作后，重启iTouch，在屏幕最上方状态栏上划一下，出现设置Toggle的界面，点击More，将OpenVPN设置为On，然后回到主界面后，在Toggle界面里点击该按钮，等一会儿之后，就可以实现翻墙了。</li>



<li>也有人说直接在iTouch上安装<code>mobileterminal</code>来完成上述命令行的操作，但是很不幸，我用<code>mobileterminal</code>键入测试命令后OpenVPN无法连接成功，不知为何。</li>
</ol>



<p>我的这篇文章省略了网上其他文章里冗长的说明，我想对于一般玩家，不需要知道这些东西都是啥，知道怎么用就行了，所以我只罗列了步骤，如果有人发现当中的错误或遇到某种问题，欢迎留言或联系我。</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Dell N-Series 激活SLIC2.0/模拟BIOS激活系统会烧毁主板么？</title>
		<link>https://jameswsullivan.github.io/dell-n-series-laptop-slic20-bios/</link>
		
		<dc:creator><![CDATA[James]]></dc:creator>
		<pubDate>Thu, 25 Feb 2010 16:16:00 +0000</pubDate>
				<category><![CDATA[archive]]></category>
		<category><![CDATA[Dell]]></category>
		<category><![CDATA[Hardware]]></category>
		<category><![CDATA[System Administration]]></category>
		<category><![CDATA[Windows Systems Administration]]></category>
		<guid isPermaLink="false">https://jameswsullivan.github.io/?p=2219</guid>

					<description><![CDATA[实测Dell N-Series用SLIC2.0/模拟BIOS激活系统是否会烧毁主板]]></description>
										<content:encoded><![CDATA[
<blockquote class="wp-block-quote">
<p>此文系早年博客的备份，仅用于参考学习。<br>This article is an archival copy of my early years&#8217; blog posts.</p>
</blockquote>



<p><a href="http://bbs.pcbeta.com/">论坛</a>里对于Dell N-Series系列笔记本如何激活SLIC2.0的解答已经很明确了，所以在这个问题上本文仅做一个简记，第二个问题才是本文的重点。</p>



<p>前几天偶然看到一篇有关“使用loader（即模拟BIOS）的方式激活Vista/Win7有烧毁主板的可能”的文章，读过之后我着实被吓了一跳，赶紧Google了一下相关知识并对自己身边的几台机器进行温度检测（我已用loader给自己和朋友装了若干台机器，一旦埋下隐患后果不堪设想 -_-!!! ），在此顺便将检测结果和我的一些思考写下来，供他人和自己日后作为参考。</p>



<div style="height:50px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">1. Dell N-Series 系列激活SLIC2.0的方法（实践机器为Dell Latitude D830）</h2>



<p>Dell N-Series由于在出厂时没有预装系统，所以它把SLIC2.0给隐藏了。这对于Vista之前的系统是没有影响的，但是为了完美使用Vista，我们需要借助dell的一个小工具将其显示出来。</p>



<p><s>点击下载：DellServiceTag</s></p>



<p>具体操作方法很简单，任意一种方式进入纯DOS，运行其中的svctag.exe，然后根据屏幕提示操作即可。有人说需要上网找同型号机器的ServiceTag以便更改时使用，但其实只要执行两次更改，第一次将自己的ServiceTag记住，提述输入新的Tag时留空直接回车，然后运行第二次的时候再将自己的Tag填回去即可。</p>



<p>更具体的操作方法参见远景的帖子：<s>http://bbs.pcbeta.com/viewthread.php?tid=607414</s></p>



<p><s>SLIC查看器：SLIC_ToolKit_V3.2</s></p>



<p><strong>一点小补充：</strong>经我本人测试，D830使用网上达人修改的BIOS升级程序升级至SLIC2.1是安全的，我升级后使用至今没有出现任何不良反应，只要在BIOS升级的过程中不出断电之类的问题应该就没有问题。（D830 N-Series 我并未尝试，我的机器是T7300配置、预装XP的版本）</p>



<p><strong>注意：</strong>博主不对升级BIOS有可能产生的不良后果负责，我只在我的机器上测试成功，若你的机器与我的有不同，请Google后再实践！</p>



<div style="height:50px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">2. “用loader能烧毁主板”的问题</h2>



<p>首先，我要陈述下述事实：</p>



<p>1). 我在网上并没有搜到任何一个确因使用loader而使得主板烧毁或者元件高温脱焊的实例；</p>



<p>2). 综论坛、各种“知道”所述，所谓“用loader能烧毁主板”的说法，其核心就是在讨论两个问题：</p>



<p>(1). 模拟BIOS使得系统与真实BIOS之间的通信不能正常进行，进而BIOS温控程序无法根据硬件温度调节风扇转速，最终导致过热而烧毁硬件;（此为我以及大多数网友所担心的问题）</p>



<p>(2). 由于模拟BIOS与真实BIOS之间的差异，使得系统在对真实BIOS进行读写时写入了错误值（主要为电压）而导致硬件烧毁；（说实话这个问题我不是很明白，也无法去验证）</p>



<p>其实(1)还是比较容易去检验的，最简单的方法就是用EVEREST一类的软件对一台机器使用/未使用模拟BIOS的状态进行一段时间的温度和风扇转速监测，并且在两次监测过程中使电脑的运转负荷尽量相同。我在修改一台Dell D830 N-Series机器的SLIC前后对它进行了检测，结果如下：</p>



<p>1). 用SLIC ToolKit查看模拟的SLIC版本是DELLM07_V2.0，修改后真实的SLIC是DELLM08_V2.0；</p>



<p>2). EVEREST监测过程中均是先开机闲置大约20分钟，再打一会儿G-Force，其间频繁查看EVEREST的温度检测，结果是用/未用模拟BIOS的元件温度前者与后者大致相同，上下2-3℃的误差也在传感器和软件的误差范围内；风扇转速显示倒是有些区别，前者比后者数值上要少5-600RPM，但在玩游戏过程中由于显卡和CPU温度的升高，风扇都提高了大约相同比例的转速，所以基本上从我当前的这台机器判断，模拟BIOS并未对机器的温度检测与控制系统产生什么影响。</p>



<p>但是，我这种检测有很大的局限性：</p>



<p>1. 我的机器本身就是Dell的，模拟的BIOS也用的是Dell的，同时模拟BIOS与真实BIOS版本差别不大，所以二者在温控方面可能本来就没有多大差异。而对于使用A品牌的电脑却用B品牌的模拟BIOS的情况，我没去进行检测，因为手头实在没有可以随意折腾的电脑，也没有那么长的空闲时间来做多个测试。</p>



<p>2. 我没有对兼容机进行测试。兼容机的BIOS与笔记本和品牌机还是有很大不同的，而且不同品牌的主板、新品与旧品主板的BIOS都可能存在差异，使用模拟BIOS会不会对它有影响我就无法一一测试了。</p>



<p>不过单就使用效果来看，毕竟loader已经被中国人用的很广泛了，每个经常承接“装系统”任务的人周围肯定都有几台机器是用loader激活的，也没听说有人真的因此而损坏了硬件。所以我在此下一个并无坚实理论依据的结论：<strong>用loader基本上是安全的</strong>。</p>



<p>一篇我认为讲解的比较透彻的参考文章：<s>http://www.metsky.com/archives/133.html</s></p>



<p>关键字：dell n-series 机器激活slic2.0，模拟bios会不会烧毁主板，用loader激活oem系统会不会烧毁主板，模拟bios激活系统烧毁主板</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>用自己的Google账户自建Twitter代理</title>
		<link>https://jameswsullivan.github.io/deploy-twitter-proxy-using-google-app-engine/</link>
		
		<dc:creator><![CDATA[James]]></dc:creator>
		<pubDate>Thu, 26 Nov 2009 17:49:00 +0000</pubDate>
				<category><![CDATA[archive]]></category>
		<category><![CDATA[DevOps]]></category>
		<category><![CDATA[Google App Engine]]></category>
		<category><![CDATA[Proxy]]></category>
		<category><![CDATA[Python]]></category>
		<category><![CDATA[Software Development]]></category>
		<category><![CDATA[System Administration]]></category>
		<category><![CDATA[Twitter]]></category>
		<category><![CDATA[Windows Systems Administration]]></category>
		<guid isPermaLink="false">https://jameswsullivan.github.io/?p=2629</guid>

					<description><![CDATA[用自己的Google账户(Google App Engine)自建Twitter代理]]></description>
										<content:encoded><![CDATA[
<blockquote class="wp-block-quote">
<p>此文系早年博客的备份，仅用于参考学习。<br>This article is an archival copy of my early years&#8217; blog posts.</p>
</blockquote>



<p><strong>为了达到让菜鸟也能按步骤完成搭建的目的，本文只尽可能简便的罗列步骤：</strong></p>



<ol>
<li>首先，你需要有一个Google账户，如果没有，<s>请到这里注册</s>。</li>



<li><s>访问这里</s>，点击右边侧栏的“使用入门”中的“注册”。</li>



<li>在接下来的界面中，用刚刚的Google账户登录。从这一界面开始下面将会是英文。</li>



<li>点击Create an Application。</li>



<li>下一步将会进行短信验证。<code>Country and Carrier</code>选择<code>Other</code>，<code>Mobile Number</code>填写你的手机号，注意前面加 <code>+86</code> ，例如，<code>+8613501234567</code>。注意，这里每一个手机号码只能验证一个账户，收到验证码后在下一个画面填入。</li>



<li>接着来到<code>Create an Application</code>页面，在<code>Application Identifier</code>填入你想要的程序名称，以后你访问该程序的地址就是: <code>your-identifier.appspot.com</code>。<code>Application Title</code>可以随喜好填写。选中<code>I accept these terms</code>，然后<code>Save</code>。</li>



<li>下一个页面会显示<code>Application Registered Successfully</code>。</li>



<li><s>点击这里下载</s>BirdNest，这是一个网友已经打包好的版本，原地址请访问：<s>http://cid-b25292e8d4856480.skydrive.live.com/self.aspx/.Public/gae.zip</s>。下载后解压，默认解压为<code>gae</code>目录，进入目录，用任何文本编辑工具打开<code>app.yaml</code>文件（推荐使用写字板），将第一行<code>application:nest</code>中的<code>nest</code>改为上文中你注册的<code>your-identifier</code>。</li>



<li>下载以下这两个工具，并安装：<br><code>Google App Engine：http://code.google.com/intl/zh-CN/appengine/downloads.html</code>，下载<code>Windows</code>平台的<code>GoogleAppEngine_1.2.7.msi</code>。<br><code>Python：http://www.python.org/download/releases/2.5.4/</code>，如果该地址无法访问，请直接在本站下载：（本站只提供x86版本的下载，如果你需要别的版本，请自行到上述地址下载）</li>



<li>安装完成后，到开始菜单里运行<code>Google App Engine Launcher</code>。初次运行它可能会出现警告界面，提示找不到<code>Python</code>，不要紧，点击<code>OK</code>，然后选择<code> Edit - Preferences</code>，在其中<code>Python Path</code>里，选择你所安装的<code>Python</code>路径，通常情况下默认为<code>C:\Python25\python.exe</code>。设置完成后下次运行就不会再提示了。</li>



<li>选择<code>File - Add Existing Application</code>，然后选择你刚才解压后的<code>gae</code>目录，点击<code>add</code>。然后你的窗口中会得到一个<code>name</code>为<code>your-identifier</code>，端口为<code>8080</code>的<code>App</code>。选中该<code>App</code>，点击工具栏上的<code>Deploy</code>，在弹出的对话框中填入你的<code>Gmail</code>地址和密码，点击<code>OK</code>后会出现一个<code>DOS</code>窗口，等待一小段时间，上传成功后会出现一个提示窗口，如果最后一行写着：<code>Process exited with code 0</code>，则证明你的<code>App</code>上传无误可以正确使用。如果提示不是<code>code 0</code>，则说明你的某处操作有误，请参照上文改正。</li>



<li>最后，访问<code>your-identifier.appspot.com/api/</code>，即出现Twitter首页。</li>
</ol>



<p><strong>下面是如何通过twhirl使用自己搭建的API来访问Twitter：</strong></p>



<ol>
<li><code>Twhirl</code>需要<code>adobe air</code>支持，请先下载安装<code>adobe air:http://get.adobe.com/air/</code>，然后到这里下载<code>twhirl：http://www.twhirl.org/download</code></li>



<li>安装好<code>Twhirl</code>后，在它的<code>Accounts</code>界面，左下角的菜单里选择<code>laconi.ca</code>,在旁边的输入框中填写：<code>your-twitter-id@your-identifier.appspot.com</code>,<code>your-twitter-id</code>是你的twitter用户名，<code>@</code>之后则是你的<code>Google App</code>地址。然后在上面的方框中就会出现你的帐户名，选择它，点击右边的<code>Connect</code>，输入密码即可使用了。</li>
</ol>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>让手机变为电脑的遥控器</title>
		<link>https://jameswsullivan.github.io/use-phone-as-your-computers-remote/</link>
		
		<dc:creator><![CDATA[James]]></dc:creator>
		<pubDate>Sat, 21 Nov 2009 16:08:00 +0000</pubDate>
				<category><![CDATA[archive]]></category>
		<category><![CDATA[System Administration]]></category>
		<category><![CDATA[Windows Customization]]></category>
		<category><![CDATA[Windows Systems Administration]]></category>
		<guid isPermaLink="false">https://jameswsullivan.github.io/?p=2604</guid>

					<description><![CDATA[用Salling Clicker和Connectify将手机变为电脑的遥控器]]></description>
										<content:encoded><![CDATA[
<blockquote class="wp-block-quote">
<p>此文系早年博客的备份，仅用于参考学习。<br>This article is an archival copy of my early years&#8217; blog posts.</p>
</blockquote>



<p>虽说现在只要有钱有设备，电脑可以实现的功能是无穷的，可是对于我们一般用户来说，影视作品里那种遥控操作计算机、各种电子设备无线互联的技术离我们还是很遥远。但是，我们没有尖端设备不要紧，我们有基础的蓝牙和Wi-Fi，再配上合适的软件，让手机变成电脑的遥控器，在会议或Party中潇洒一下还是不成问题的。</p>



<p><strong>硬件需求：</strong>支持Java的手机（支持Wi-Fi最好，但至少要支持蓝牙），笔记本电脑需带有Wi-Fi或蓝牙<br><strong>软件需求：</strong>Salling Clicker，Connectify</p>



<p>这里先对这两款软件进行一下简单的介绍。Salling Clicker 是一款用于手机遥控电脑的软件，它可以在线更新以支持绝大部分最新的机型，当手机端与电脑端通过蓝牙或Wi-Fi建立连接之后，便可以通过手机控制iTunes，PPT，和Windows Media Player等，也可以控制电脑的鼠标移动、音量和关机等操作。它是通过编写好的脚本来对电脑端软件进行操控的，在它的官方网站上还提供了用于操控其他软件的脚本，但可惜的是大多数都是针对多媒体播放的，比如Winamp和PowerDVD。</p>



<p>Connectify其实是一款用于共享上网的软件，它可以将带有Wi-Fi功能的笔记本变成一个无线热点，使得其他设备可以像使用路由一样通过该热点组成局域网或实现共享上网。在这里使用它的意义是，蓝牙的通信距离比Wi-Fi要小，那么用这款软件将要控制的笔记本变成一个热点，再用手机端的Salling Clicker通过该热点以Wi-Fi方式连接，那么其实就实现了电脑与手机不需通过无线路由的Wi-Fi直连，而且这种方法也为没有蓝牙的笔记本实现遥控提供了可能。</p>



<p>由于蓝牙连接相对比较简单，我在这里主要说明如何实现Wi-Fi直连。我的配置环境是：windows 7英文版, Salling Clicker 3.5, Connectify, 手机是索爱P1i。下面是实现的步骤：</p>



<h2 class="wp-block-heading">Salling Clicker：</h2>



<p>安装好Salling Clicker后，首次运行会弹出Device Setup Assistant，在这里可以选择手机的型号，选好后软件会自动提供给你适用于该手机的手机端软件，点击Copy to Desktop，然后将其拷入手机进行安装。如果你的手机型号并未列入其中，可以点击Update List后再试，如果仍未出现，则可以选择另一款与你的手机具有相同操作系统的手机。（图一）</p>



<figure class="wp-block-image size-full"><img decoding="async" width="436" height="399" src="https://jameswsullivan.github.io/wp-content/uploads/2023/06/BlogUsePhoneAsComputerRemote01.jpg" alt="" class="wp-image-2605" srcset="https://jameswsullivan.github.io/wp-content/uploads/2023/06/BlogUsePhoneAsComputerRemote01.jpg 436w, https://jameswsullivan.github.io/wp-content/uploads/2023/06/BlogUsePhoneAsComputerRemote01-300x275.jpg 300w" sizes="(max-width: 436px) 100vw, 436px" /></figure>



<p>在下一个界面里它会询问你是否以蓝牙方式连接，可以在Select Phone中选择已开启蓝牙的手机，这一步我们直接跳过。再下一步里，它会设置Wi-Fi连接，并且要求你的手机与电脑同时存在于一个无线网络中。选中I want to use this feature，并填写连接密码（相当于蓝牙配对密码）。（图二）</p>



<figure class="wp-block-image size-full"><img decoding="async" width="436" height="399" src="https://jameswsullivan.github.io/wp-content/uploads/2023/06/BlogUsePhoneAsComputerRemote02.jpg" alt="" class="wp-image-2606" srcset="https://jameswsullivan.github.io/wp-content/uploads/2023/06/BlogUsePhoneAsComputerRemote02.jpg 436w, https://jameswsullivan.github.io/wp-content/uploads/2023/06/BlogUsePhoneAsComputerRemote02-300x275.jpg 300w" sizes="(max-width: 436px) 100vw, 436px" /></figure>



<p>关闭设置界面，电脑端Salling Clicker的设置就完成了。</p>



<h2 class="wp-block-heading">Connectify：</h2>



<p>Connectify是一款傻瓜软件，安装后界面如下：（图三）</p>



<figure class="wp-block-image size-full"><img decoding="async" width="314" height="374" src="https://jameswsullivan.github.io/wp-content/uploads/2023/06/BlogUsePhoneAsComputerRemote03.jpg" alt="" class="wp-image-2607" srcset="https://jameswsullivan.github.io/wp-content/uploads/2023/06/BlogUsePhoneAsComputerRemote03.jpg 314w, https://jameswsullivan.github.io/wp-content/uploads/2023/06/BlogUsePhoneAsComputerRemote03-252x300.jpg 252w" sizes="(max-width: 314px) 100vw, 314px" /></figure>



<p>在WiFi Name与Passphrase里分别填写无线热点的名称与连接密码，在Internet中选择是否共享上网，因为我们主要用来实现Wi-Fi直连，所以只需选择No Internet Sharing，最后点击Start Hotspot即可，注意它要求密码为8-12位。</p>



<h2 class="wp-block-heading">手机端：</h2>



<p>用手机搜索该Wi-Fi热点并连接，打开Salling Clicker，选择Connect with WiFi…， 它会自动搜索电脑端，然后选择你的笔记本名称进行连接，成功连接之后，你就可以潇洒的用手机操控电脑了，如果你的手机有一个足够大的触屏，那么效果会更上一层楼。</p>



<p>Salling Clicker手机端的使用很简单，笔者在这里只在PPT操作方面简单罗嗦一句：数字键可以直接切换到特定幻灯片，比如按22即切换到第22张幻灯。</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>用Goldwave改变音频文件的播放速度</title>
		<link>https://jameswsullivan.github.io/change-audio-playback-speed-with-goldwave/</link>
		
		<dc:creator><![CDATA[James]]></dc:creator>
		<pubDate>Sun, 02 Aug 2009 17:56:00 +0000</pubDate>
				<category><![CDATA[archive]]></category>
		<category><![CDATA[Audio]]></category>
		<category><![CDATA[Goldwave]]></category>
		<category><![CDATA[Podcast]]></category>
		<guid isPermaLink="false">https://jameswsullivan.github.io/?p=2578</guid>

					<description><![CDATA[用Goldwave改变音频文件的播放速度]]></description>
										<content:encoded><![CDATA[
<blockquote class="wp-block-quote">
<p>此文系早年博客的备份，仅用于参考学习。<br>This article is an archival copy of my early years&#8217; blog posts.</p>
</blockquote>



<p>经常听英语听力的同学有时可能会觉得自己下载的听力音频的速度不是很合适，希望将它们调快或调慢1～2倍速来播放，可是我们常用的音频播放器均不支持快放或慢放功能，而且即使有个别的播放器支持此功能，其调整后的音频音色改变也很大，听起来效果很不理想。那么，到底用什么方法能既避免严重的失真，又达到我们需要的效果呢？今天，我们就用Goldwave来实现这个目的（本文以将多个文件批量调快1.5倍速为例）。<br> <br>在调整过程中，我们要用到Goldwave的“时间弯曲”效果和“批处理”功能。首先，打开一个待处理的音频文件，选择“效果”—“时间弯曲”，切换到“类似”选项，并从下方的“预置”中选择“默认”（在“预置”菜单中，Goldwave已经为我们提供了几个预置选项，此处选择“默认”是为了将我们用于批处理的效果存入其中）。<br> <br>然后，将“变化”一栏改为150（加快1.5倍速），此时可以点击“预置”旁边的播放键试听，对效果满意则点击旁边的加号，将此设置存入“默认”中。如图：</p>



<figure class="wp-block-image size-full"><img decoding="async" width="332" height="309" src="https://jameswsullivan.github.io/wp-content/uploads/2023/06/BlogGoldWave01.jpg" alt="" class="wp-image-2580" srcset="https://jameswsullivan.github.io/wp-content/uploads/2023/06/BlogGoldWave01.jpg 332w, https://jameswsullivan.github.io/wp-content/uploads/2023/06/BlogGoldWave01-300x279.jpg 300w" sizes="(max-width: 332px) 100vw, 332px" /></figure>



<p>最后，打开“文件”—“批处理”，向其中添加需要批量更改的文件，再切换至“处理”选项卡，从“添加效果”中选择上一步中设定好的“时间弯曲 — 默认”并将其添加，最后在“文件夹”里设置修改后的文件的保存方式，就可以点击“开始”来进行批处理了。</p>



<figure class="wp-block-image size-full is-style-default"><img decoding="async" width="340" height="332" src="https://jameswsullivan.github.io/wp-content/uploads/2023/06/BlogGoldWave02.jpg" alt="" class="wp-image-2581" srcset="https://jameswsullivan.github.io/wp-content/uploads/2023/06/BlogGoldWave02.jpg 340w, https://jameswsullivan.github.io/wp-content/uploads/2023/06/BlogGoldWave02-300x293.jpg 300w" sizes="(max-width: 340px) 100vw, 340px" /></figure>



<p>用此方法改变音频的播放速度，只要更改的范围合理，对一般音频的音色不会产生太大的影响，因此对于英语听力或品质要求不高的音乐伴奏来说，这是一个快速而简便的技巧。</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>将DVD制作成压缩视频</title>
		<link>https://jameswsullivan.github.io/dvd-rip-and-subtitle-extraction/</link>
		
		<dc:creator><![CDATA[James]]></dc:creator>
		<pubDate>Sun, 02 Aug 2009 17:42:00 +0000</pubDate>
				<category><![CDATA[archive]]></category>
		<category><![CDATA[Video Editing]]></category>
		<guid isPermaLink="false">https://jameswsullivan.github.io/?p=2385</guid>

					<description><![CDATA[DVD压缩以及字母提取]]></description>
										<content:encoded><![CDATA[
<blockquote class="wp-block-quote">
<p>此文系早年博客的备份，仅用于参考学习。<br>This article is an archival copy of my early years&#8217; blog posts.</p>
</blockquote>



<p>日前从老姐那儿借来一套纪录片儿——《动物王国》，7张DVD，里面有很多有关哈士奇的内容，我想收藏，可直接拷贝又无奈DVD文件实在太大，复刻DVD光盘又觉得不太值。于是开始着手研究DVD的压缩转换，希望能做出和verycd中的资源相类似的压缩视频。</p>



<h2 class="wp-block-heading">多个VOB文件的合并：</h2>



<p>DVD光盘中经常一段影片被分为几个vob文件，这时可能需要将这几个文件合并成一个大文件后再进行压缩。这里我使用的是：<a href="https://www.videohelp.com/software/VOBMerge" target="_blank" rel="noreferrer noopener">VOBMerge</a>。它的操作很简便，上手即会，合并速度也很快。</p>



<h2 class="wp-block-heading">视频文件的压缩：</h2>



<p>回想我以前用过的几个视频压缩转换工具，功能均不全面并且压缩速度很慢，不适合如今的批量转换。经过在网上的不懈搜索，我发现一个叫<a href="https://www.erightsoft.com/home.html" target="_blank" rel="noreferrer noopener">SUPER（点击链接至官网）</a>的工具，它是一款国外免费软件，除了没有对中文的支持外，近乎没什么缺点。它支持大多数的常见音视频编码方式，转换速度快，压缩比大，只要设置得当，几乎不损失视频质量。</p>



<p>软件下载页（拖至页面最下方download SUPER setup file）：<a href="https://www.erightsoft.com/home.html" target="_blank" rel="noreferrer noopener">https://www.erightsoft.com/home.html</a></p>



<p>说起选项的设置，我在这里想简单提一提使用中遇到的几个问题（以转换成mpeg-4编码的avi文件为例）。</p>



<ol>
<li>编码器选择FFmpeg，不要选择MEncoder，因为选择MEncoder后压缩出来的视频有很严重的横纹。上网查了一下，说是这种问题是由于场的设置而导致的，但在软件里我没有找到相关设置，而我对音视频方面的专业知识也知之甚少，所以无法给出确切的答案。选择FFmpeg则无横纹出现了。&nbsp;</li>



<li>在output audio codec选项里，如果DVD本身的音轨并不特殊，那么选择mp3是比较安全的。我试过AC3和AAC，压缩出来的文件音视均不同步，而且不知何故画面跳帧现象十分严重。至于这个现象的原因，我还没弄清楚，我们一起学习吧。&nbsp;</li>



<li>根据源视频的清晰度，可以适当改变码率来调整清晰度。</li>



<li>如果想只保留音频或只保留视频，可将音频流或视频流选择Disable，这样也可以用来做音视频的提取工作。</li>
</ol>



<h2 class="wp-block-heading">DVD字幕的提取：</h2>



<p>完成了视频的压缩，还需要解决字幕问题，即提取DVD光盘中的字幕，并将其转换成idx/sub字幕。当然，转换成了sub字幕之后，再利用ocr工具制作srt等类型的字幕也就好办了。这里我用到的工具是：<a href="https://www.softpedia.com/get/Multimedia/Video/Other-VIDEO-Tools/VobSub-Ripper-Wizard.shtml" target="_blank" rel="noreferrer noopener">VobSub Ripper Wizard</a>。打开软件后，只需选定DVD中相应的IFO文件，选择目的文件夹，按下一步即可开始生成sub文件。</p>



<p>这里做一点补充：如此生成的字幕文件，和DVD光盘当中源文件的时间线是相同的，即在合并vob文件时要和源光盘中的影片段落划分一致；还有，如果对视频文件进行了合并、分割、剪辑等操作，注意要对字幕文件做调整。</p>



<p>在做这件事情的时候，我回想起了当年在学校时做简单的视频采编工作的情景，也想起了几款经典的软件，在这里补一笔：TMPGEnc（俗称小日本儿），Canopus Procoder，EDIUS 5（强大的非线编工具）。</p>



<p>注：本文纯粹面向菜鸟，旨在将视频压缩的实际经验与方法发上来分享。本人不太清楚音视频方面的知识，所以文中有很多东西一定讲的都不清楚不专业，音视频编码等方面一定也都有很多错误的用词，请明白的读者加以指正。</p>



<p>Tag: DVD光盘压缩，DVD电影压缩，DVD压缩，DVD转换成avi，DVD视频转换，DVD音频提取，DVD视频提取，批量转换电影格式，批量压缩电影，制作压缩视频，dvd文件合并，vob文件合并，dvd字幕提取，dvd字幕转换，sub字幕制作，SUPER下载，SUPER压缩后音视频不同步，压缩后视频出现横纹</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>多台vista机器组建小型局域网</title>
		<link>https://jameswsullivan.github.io/lan-setup-with-multiple-vista-machines/</link>
		
		<dc:creator><![CDATA[James]]></dc:creator>
		<pubDate>Sun, 02 Aug 2009 17:42:00 +0000</pubDate>
				<category><![CDATA[archive]]></category>
		<category><![CDATA[Networking]]></category>
		<category><![CDATA[System Administration]]></category>
		<category><![CDATA[Windows Systems Administration]]></category>
		<guid isPermaLink="false">https://jameswsullivan.github.io/?p=2347</guid>

					<description><![CDATA[多台Vista机器组件小型局域网]]></description>
										<content:encoded><![CDATA[
<blockquote class="wp-block-quote">
<p>此文系早年博客的备份，仅用于参考学习。<br>This article is an archival copy of my early years&#8217; blog posts.</p>
</blockquote>



<p>Tag: 多台vista机器组建局域网 vista笔记本组建无线局域网 vista系统组建无线局域网 vista局域网文件共享 vista“网络发现”无法启动 在“网络”里能看见对方机器但无法访问（windows无法访问）</p>



<p>1 &#8211; 在vista “网络和共享中心”中启用 “网络发现”和“文件共享”。若发现“网络发现”无法设置为“启用”，或无论怎样开启“网络发现”，都只显示“自定义”时，参考以下设置：</p>



<p>右键计算机 →管理→服务和应用程序→服务，将下述服务设置为启动：</p>



<pre class="wp-block-code"><code>Computer Browser<br>DHCP Client<br>DNS Client<br>Function Discovery Resource Publication<br>Remote Procedure Call（RPC）<br>Remote Procedure Call（RPC）Locator<br>Server<br>SSDP Discovery<br>TCP/IP NetBIOS Helper<br>UPnP Device Host</code></pre>



<p>设置完后 “网络发现”就可以设置为“启动”了。</p>



<p>2 &#8211; 将多台机器均进行上述操作后，在“网络”里应该已经能看见彼此的计算机名，但这时可能还无法访问对方共享的资源。继续进行如下设置：</p>



<ul>
<li>运行→gpedit.msc→计算机配置→Windows设置→安全设置→本地策略→用户权限分配：</li>



<li>确保“从网络访问此计算机”内包含“everyone”</li>



<li>“拒绝从网络访问这台计算机”中将“Guest”删除</li>



<li>再进入“本地策略→安全选项”, 将“帐户：来宾帐户状态”设置为“已启用”</li>
</ul>



<p>3 &#8211; 确保“Windows防火墙”的设置中，在“例外”中已经勾选“网络发现”和“文件和打印机共享”，并且其他的防火墙工具都没有对相关的操作进行限制。</p>



<p>进行过上述操作，同一工作组内的计算机应该可以彼此互相访问了。</p>



<p>4 &#8211; 补充：文件夹及驱动器的共享设置</p>



<p>在共享文件夹时，要在下面的菜单内添加授权访问的用户，一般添加“everyone”，并设置其为“读者”，其具有只读权限。</p>



<p>若想共享整个驱动器，设置方法和共享文件夹略有不同，打开驱动器（如D盘）属性→在“安全”→“组或用户名”中添加“Guest”用户，设置其权限；然后切换至“共享”选项卡→高级共享→选中“共享此文件夹”后确定，即可完成驱动器的共享。</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>创新Creative SoundBlaster Vibra128 声卡驱动（ForXP）</title>
		<link>https://jameswsullivan.github.io/install-creative-soundblaster-virbra128-driver-on-windows-xp/</link>
		
		<dc:creator><![CDATA[James]]></dc:creator>
		<pubDate>Sun, 02 Aug 2009 17:41:00 +0000</pubDate>
				<category><![CDATA[archive]]></category>
		<category><![CDATA[Creative SoundBlaster]]></category>
		<category><![CDATA[System Administration]]></category>
		<category><![CDATA[Windows Systems Administration]]></category>
		<guid isPermaLink="false">https://jameswsullivan.github.io/?p=2336</guid>

					<description><![CDATA[在XP上安装Creative SoundBlaster Vibra128驱动。]]></description>
										<content:encoded><![CDATA[
<blockquote class="wp-block-quote">
<p>此文系早年博客的备份，仅用于参考学习。<br>This article is an archival copy of my early years&#8217; blog posts.</p>
</blockquote>



<p>昨天在家把旧机器进行一番整修让其重新运作，可是在一切都弄好之后发现板载声卡（AC97）的音频输出接口有问题，无论怎么插都只有一个声道出声。由于以前一直在使用创新的SoundBlaster Vibra128独立声卡，所以直到现在才发现这个毛病。无奈，将先前的独立声卡再插回去，启动系统安装驱动，却猛然发现手头所有关于它的驱动全都只支持到Win2000，而上网搜索，也都没找到该驱动的更新。冷静了一下，想想以前遇到类似的系统问题，当用中文搜索无法找到答案时，用英文搜索时问题便迎刃而解，于是试了一下，果然最终在一个外国论坛里找到了下载。看到网上也有诸多兄弟苦苦寻找此驱动而无果，我就在这里提供以下下载了：<a href="https://github.com/jameswsullivan/blog-file-share/blob/main/EV1938_Driver_XP.zip">Download</a> (This file contains drivers downloaded from the internet, use at your own risk).</p>



<p>安装这个驱动的时候注意，使用其自带的setup安装的话，有可能安装程序提示“找不到任何SoundBlaster声卡”，或者安装后弹出“发现新硬件”时无法自动找到其驱动。我建议在系统弹出“发现新硬件”时，手动指向驱动目录 <code>Common\ECTDrivers\WdmDrv</code> 来进行安装，这样完成后即刻好用。</p>



<p>如果安装的朋友也和我这种情况一样，既有板载声卡又有独立声卡，在安装独立声卡的驱动之前须在BIOS中将AC97设置为Disabled，这样才不会引起冲突。我遇到的情况是WinXP启动条卡死不动，无法进入系统的情况。</p>



<p>Tag: 创新Creative Vibra128声卡xp驱动，Creative SoundBlaster Vibra128 driver for xp，vibra128声卡xp驱动下载，EV1938声卡芯片xp驱动，EV1938 driver for xp</p>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
